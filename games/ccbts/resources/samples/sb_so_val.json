{
    "simple": {
        "simple": {
            "2": {
                "wn": [
                    {
                        "combo_name": "wn",
                        "shapes": [
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "green",
                            "blue"
                        ],
                        "x": [
                            0,
                            0
                        ],
                        "y": [
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'green', 0, 7)\nput(board, 'nut', 'blue', 0, 7)",
                                "output": [
                                    "put(board, 'washer', 'green', 0, 7)",
                                    "put(board, 'nut', 'blue', 0, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wn(board, colors, x, y):\n    shapes = ['washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwn(board, ('green', 'blue'), 0, 7)",
                                "function": "def wn(board, colors, x, y):\n    shapes = ['washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wn(board, ('green', 'blue'), 0, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 1st row, 8th column. place a blue nut in the 1st row, 8th column. This is wn.",
                                        "<Editor>": {
                                            "total_code": "def wn(board, colors, x, y):\n    shapes = ['washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwn(board, ('green', 'blue'), 0, 7)",
                                            "function": "def wn(board, colors, x, y):\n    shapes = ['washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wn(board, ('green', 'blue'), 0, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'green', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wn",
                        "shapes": [
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            2,
                            2
                        ],
                        "y": [
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 2, 7)\nput(board, 'nut', 'blue', 2, 7)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 2, 7)",
                                    "put(board, 'nut', 'blue', 2, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wn(board, colors, x, y):\n    shapes = ['washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwn(board, ('yellow', 'blue'), 2, 7)",
                                "function": "def wn(board, colors, x, y):\n    shapes = ['washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wn(board, ('yellow', 'blue'), 2, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 8th column. place a blue nut in the 3rd row, 8th column. This is wn.",
                                        "<Editor>": {
                                            "total_code": "def wn(board, colors, x, y):\n    shapes = ['washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwn(board, ('yellow', 'blue'), 2, 7)",
                                            "function": "def wn(board, colors, x, y):\n    shapes = ['washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wn(board, ('yellow', 'blue'), 2, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 2, 7)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "ws": [
                    {
                        "combo_name": "ws",
                        "shapes": [
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "yellow"
                        ],
                        "x": [
                            1,
                            1
                        ],
                        "y": [
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 1, 4)\nput(board, 'screw', 'yellow', 1, 4)",
                                "output": [
                                    "put(board, 'washer', 'red', 1, 4)",
                                    "put(board, 'screw', 'yellow', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def ws(board, colors, x, y):\n    shapes = ['washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nws(board, ('red', 'yellow'), 1, 4)",
                                "function": "def ws(board, colors, x, y):\n    shapes = ['washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "ws(board, ('red', 'yellow'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 5th column. place a yellow screw in the 2nd row, 5th column. This is ws.",
                                        "<Editor>": {
                                            "total_code": "def ws(board, colors, x, y):\n    shapes = ['washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nws(board, ('red', 'yellow'), 1, 4)",
                                            "function": "def ws(board, colors, x, y):\n    shapes = ['washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "ws(board, ('red', 'yellow'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'red', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 1, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "ws",
                        "shapes": [
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "red"
                        ],
                        "x": [
                            2,
                            2
                        ],
                        "y": [
                            5,
                            5
                        ],
                        "orientations": [
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'blue', 2, 5)\nput(board, 'screw', 'red', 2, 5)",
                                "output": [
                                    "put(board, 'washer', 'blue', 2, 5)",
                                    "put(board, 'screw', 'red', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def ws(board, colors, x, y):\n    shapes = ['washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nws(board, ('blue', 'red'), 2, 5)",
                                "function": "def ws(board, colors, x, y):\n    shapes = ['washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "ws(board, ('blue', 'red'), 2, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 3rd row, 6th column. place a red screw in the 3rd row, 6th column. This is ws.",
                                        "<Editor>": {
                                            "total_code": "def ws(board, colors, x, y):\n    shapes = ['washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nws(board, ('blue', 'red'), 2, 5)",
                                            "function": "def ws(board, colors, x, y):\n    shapes = ['washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "ws(board, ('blue', 'red'), 2, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'red', 2, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nw": [
                    {
                        "combo_name": "nw",
                        "shapes": [
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "blue",
                            "green"
                        ],
                        "x": [
                            0,
                            0
                        ],
                        "y": [
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 0, 4)\nput(board, 'washer', 'green', 0, 4)",
                                "output": [
                                    "put(board, 'nut', 'blue', 0, 4)",
                                    "put(board, 'washer', 'green', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nw(board, colors, x, y):\n    shapes = ['nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnw(board, ('blue', 'green'), 0, 4)",
                                "function": "def nw(board, colors, x, y):\n    shapes = ['nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nw(board, ('blue', 'green'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 5th column. place a green washer in the 1st row, 5th column. This is nw.",
                                        "<Editor>": {
                                            "total_code": "def nw(board, colors, x, y):\n    shapes = ['nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnw(board, ('blue', 'green'), 0, 4)",
                                            "function": "def nw(board, colors, x, y):\n    shapes = ['nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nw(board, ('blue', 'green'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'green', 0, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nw",
                        "shapes": [
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "green"
                        ],
                        "x": [
                            3,
                            3
                        ],
                        "y": [
                            5,
                            5
                        ],
                        "orientations": [
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'yellow', 3, 5)\nput(board, 'washer', 'green', 3, 5)",
                                "output": [
                                    "put(board, 'nut', 'yellow', 3, 5)",
                                    "put(board, 'washer', 'green', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nw(board, colors, x, y):\n    shapes = ['nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnw(board, ('yellow', 'green'), 3, 5)",
                                "function": "def nw(board, colors, x, y):\n    shapes = ['nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nw(board, ('yellow', 'green'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 6th column. place a green washer in the 4th row, 6th column. This is nw.",
                                        "<Editor>": {
                                            "total_code": "def nw(board, colors, x, y):\n    shapes = ['nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnw(board, ('yellow', 'green'), 3, 5)",
                                            "function": "def nw(board, colors, x, y):\n    shapes = ['nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nw(board, ('yellow', 'green'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "ns": [
                    {
                        "combo_name": "ns",
                        "shapes": [
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "red"
                        ],
                        "x": [
                            1,
                            1
                        ],
                        "y": [
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'green', 1, 4)\nput(board, 'screw', 'red', 1, 4)",
                                "output": [
                                    "put(board, 'nut', 'green', 1, 4)",
                                    "put(board, 'screw', 'red', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def ns(board, colors, x, y):\n    shapes = ['nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nns(board, ('green', 'red'), 1, 4)",
                                "function": "def ns(board, colors, x, y):\n    shapes = ['nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "ns(board, ('green', 'red'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 2nd row, 5th column. place a red screw in the 2nd row, 5th column. This is ns.",
                                        "<Editor>": {
                                            "total_code": "def ns(board, colors, x, y):\n    shapes = ['nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nns(board, ('green', 'red'), 1, 4)",
                                            "function": "def ns(board, colors, x, y):\n    shapes = ['nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "ns(board, ('green', 'red'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'red', 1, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "ns",
                        "shapes": [
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "yellow"
                        ],
                        "x": [
                            2,
                            2
                        ],
                        "y": [
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 2, 4)\nput(board, 'screw', 'yellow', 2, 4)",
                                "output": [
                                    "put(board, 'nut', 'blue', 2, 4)",
                                    "put(board, 'screw', 'yellow', 2, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def ns(board, colors, x, y):\n    shapes = ['nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nns(board, ('blue', 'yellow'), 2, 4)",
                                "function": "def ns(board, colors, x, y):\n    shapes = ['nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "ns(board, ('blue', 'yellow'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 5th column. place a yellow screw in the 3rd row, 5th column. This is ns.",
                                        "<Editor>": {
                                            "total_code": "def ns(board, colors, x, y):\n    shapes = ['nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nns(board, ('blue', 'yellow'), 2, 4)",
                                            "function": "def ns(board, colors, x, y):\n    shapes = ['nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "ns(board, ('blue', 'yellow'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 2, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bw": [
                    {
                        "combo_name": "bw",
                        "shapes": [
                            "bridge-h",
                            "washer"
                        ],
                        "colors": [
                            "red",
                            "blue"
                        ],
                        "x": [
                            0,
                            0
                        ],
                        "y": [
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'red', 0, 6)\nput(board, 'washer', 'blue', 0, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'red', 0, 6)",
                                    "put(board, 'washer', 'blue', 0, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbw(board, ('red', 'blue'), 0, 6)",
                                "function": "def bw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bw(board, ('red', 'blue'), 0, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 1st row, 7th column. place a blue washer in the 1st row, 7th column. This is bw.",
                                        "<Editor>": {
                                            "total_code": "def bw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbw(board, ('red', 'blue'), 0, 6)",
                                            "function": "def bw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bw(board, ('red', 'blue'), 0, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 0, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bw",
                        "shapes": [
                            "bridge-h",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "green"
                        ],
                        "x": [
                            3,
                            3
                        ],
                        "y": [
                            4,
                            4
                        ],
                        "orientations": [
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'yellow', 3, 4)\nput(board, 'washer', 'green', 3, 4)",
                                "output": [
                                    "put(board, 'bridge-h', 'yellow', 3, 4)",
                                    "put(board, 'washer', 'green', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbw(board, ('yellow', 'green'), 3, 4)",
                                "function": "def bw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bw(board, ('yellow', 'green'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 5th column. place a green washer in the 4th row, 5th column. This is bw.",
                                        "<Editor>": {
                                            "total_code": "def bw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbw(board, ('yellow', 'green'), 3, 4)",
                                            "function": "def bw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bw(board, ('yellow', 'green'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bn": [
                    {
                        "combo_name": "bn",
                        "shapes": [
                            "bridge-v",
                            "nut"
                        ],
                        "colors": [
                            "green",
                            "blue"
                        ],
                        "x": [
                            1,
                            1
                        ],
                        "y": [
                            6,
                            6
                        ],
                        "orientations": [
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'green', 1, 6)\nput(board, 'nut', 'blue', 1, 6)",
                                "output": [
                                    "put(board, 'bridge-v', 'green', 1, 6)",
                                    "put(board, 'nut', 'blue', 1, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbn(board, ('green', 'blue'), 1, 6)",
                                "function": "def bn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bn(board, ('green', 'blue'), 1, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 2nd row, 7th column. place a blue nut in the 2nd row, 7th column. This is bn.",
                                        "<Editor>": {
                                            "total_code": "def bn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbn(board, ('green', 'blue'), 1, 6)",
                                            "function": "def bn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bn(board, ('green', 'blue'), 1, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 1, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bn",
                        "shapes": [
                            "bridge-v",
                            "nut"
                        ],
                        "colors": [
                            "blue",
                            "yellow"
                        ],
                        "x": [
                            1,
                            1
                        ],
                        "y": [
                            7,
                            7
                        ],
                        "orientations": [
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'blue', 1, 7)\nput(board, 'nut', 'yellow', 1, 7)",
                                "output": [
                                    "put(board, 'bridge-v', 'blue', 1, 7)",
                                    "put(board, 'nut', 'yellow', 1, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbn(board, ('blue', 'yellow'), 1, 7)",
                                "function": "def bn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bn(board, ('blue', 'yellow'), 1, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 2nd row, 8th column. place a yellow nut in the 2nd row, 8th column. This is bn.",
                                        "<Editor>": {
                                            "total_code": "def bn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbn(board, ('blue', 'yellow'), 1, 7)",
                                            "function": "def bn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bn(board, ('blue', 'yellow'), 1, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 1, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 1, 7)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bs": [
                    {
                        "combo_name": "bs",
                        "shapes": [
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "green"
                        ],
                        "x": [
                            1,
                            1
                        ],
                        "y": [
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'blue', 1, 6)\nput(board, 'screw', 'green', 1, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'blue', 1, 6)",
                                    "put(board, 'screw', 'green', 1, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bs(board, colors, x, y):\n    shapes = ['bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbs(board, ('blue', 'green'), 1, 6)",
                                "function": "def bs(board, colors, x, y):\n    shapes = ['bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bs(board, ('blue', 'green'), 1, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/twoshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/twoshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 2nd row, 7th column. place a green screw in the 2nd row, 7th column. This is bs.",
                                        "<Editor>": {
                                            "total_code": "def bs(board, colors, x, y):\n    shapes = ['bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbs(board, ('blue', 'green'), 1, 6)",
                                            "function": "def bs(board, colors, x, y):\n    shapes = ['bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0], [0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bs(board, ('blue', 'green'), 1, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'green', 1, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "3": {
                "wwb": [
                    {
                        "combo_name": "wwb",
                        "shapes": [
                            "washer",
                            "washer",
                            "bridge-h"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            1,
                            1,
                            1
                        ],
                        "y": [
                            5,
                            6,
                            5
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 1, 5)\nput(board, 'washer', 'green', 1, 6)\nput(board, 'bridge-h', 'yellow', 1, 5)",
                                "output": [
                                    "put(board, 'washer', 'red', 1, 5)",
                                    "put(board, 'washer', 'green', 1, 6)",
                                    "put(board, 'bridge-h', 'yellow', 1, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wwb(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwb(board, ('red', 'green', 'yellow'), 1, 5)",
                                "function": "def wwb(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wwb(board, ('red', 'green', 'yellow'), 1, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 6th column. place a green washer in the 2nd row, 7th column. place a yellow bridge horizontally in the 2nd row, 6th column. This is wwb.",
                                        "<Editor>": {
                                            "total_code": "def wwb(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwb(board, ('red', 'green', 'yellow'), 1, 5)",
                                            "function": "def wwb(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wwb(board, ('red', 'green', 'yellow'), 1, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 1, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wwb",
                        "shapes": [
                            "washer",
                            "washer",
                            "bridge-v"
                        ],
                        "colors": [
                            "red",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            0,
                            1,
                            0
                        ],
                        "y": [
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 0, 4)\nput(board, 'washer', 'red', 1, 4)\nput(board, 'bridge-v', 'yellow', 0, 4)",
                                "output": [
                                    "put(board, 'washer', 'red', 0, 4)",
                                    "put(board, 'washer', 'red', 1, 4)",
                                    "put(board, 'bridge-v', 'yellow', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wwb(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwb(board, ('red', 'red', 'yellow'), 0, 4)",
                                "function": "def wwb(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wwb(board, ('red', 'red', 'yellow'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 1st row, 5th column. place a red washer in the 2nd row, 5th column. place a yellow bridge vertically in the 1st row, 5th column. This is wwb.",
                                        "<Editor>": {
                                            "total_code": "def wwb(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwb(board, ('red', 'red', 'yellow'), 0, 4)",
                                            "function": "def wwb(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wwb(board, ('red', 'red', 'yellow'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'red', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'red', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 0, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wns": [
                    {
                        "combo_name": "wns",
                        "shapes": [
                            "washer",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "blue"
                        ],
                        "x": [
                            2,
                            2,
                            2
                        ],
                        "y": [
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            null,
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 2, 5)\nput(board, 'nut', 'green', 2, 5)\nput(board, 'screw', 'blue', 2, 5)",
                                "output": [
                                    "put(board, 'washer', 'red', 2, 5)",
                                    "put(board, 'nut', 'green', 2, 5)",
                                    "put(board, 'screw', 'blue', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nwns(board, ('red', 'green', 'blue'), 2, 5)",
                                "function": "def wns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "wns(board, ('red', 'green', 'blue'), 2, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 3rd row, 6th column. place a green nut in the 3rd row, 6th column. place a blue screw in the 3rd row, 6th column. This is wns.",
                                        "<Editor>": {
                                            "total_code": "def wns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nwns(board, ('red', 'green', 'blue'), 2, 5)",
                                            "function": "def wns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "wns(board, ('red', 'green', 'blue'), 2, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'red', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 2, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wns",
                        "shapes": [
                            "washer",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "blue",
                            "red"
                        ],
                        "x": [
                            3,
                            3,
                            3
                        ],
                        "y": [
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 3, 7)\nput(board, 'nut', 'blue', 3, 7)\nput(board, 'screw', 'red', 3, 7)",
                                "output": [
                                    "put(board, 'washer', 'red', 3, 7)",
                                    "put(board, 'nut', 'blue', 3, 7)",
                                    "put(board, 'screw', 'red', 3, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nwns(board, ('red', 'blue', 'red'), 3, 7)",
                                "function": "def wns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "wns(board, ('red', 'blue', 'red'), 3, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 8th column. place a blue nut in the 4th row, 8th column. place a red screw in the 4th row, 8th column. This is wns.",
                                        "<Editor>": {
                                            "total_code": "def wns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nwns(board, ('red', 'blue', 'red'), 3, 7)",
                                            "function": "def wns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "wns(board, ('red', 'blue', 'red'), 3, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'red', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'screw', 'red', 3, 7)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wnb": [
                    {
                        "combo_name": "wnb",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-h"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            1,
                            1,
                            1
                        ],
                        "y": [
                            6,
                            7,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 1, 6)\nput(board, 'nut', 'yellow', 1, 7)\nput(board, 'bridge-h', 'green', 1, 6)",
                                "output": [
                                    "put(board, 'washer', 'red', 1, 6)",
                                    "put(board, 'nut', 'yellow', 1, 7)",
                                    "put(board, 'bridge-h', 'green', 1, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnb(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnb(board, ('red', 'yellow', 'green'), 1, 6)",
                                "function": "def wnb(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnb(board, ('red', 'yellow', 'green'), 1, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 7th column. place a yellow nut in the 2nd row, 8th column. place a green bridge horizontally in the 2nd row, 7th column. This is wnb.",
                                        "<Editor>": {
                                            "total_code": "def wnb(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnb(board, ('red', 'yellow', 'green'), 1, 6)",
                                            "function": "def wnb(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnb(board, ('red', 'yellow', 'green'), 1, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'red', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 1, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wnb",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-h"
                        ],
                        "colors": [
                            "blue",
                            "red",
                            "green"
                        ],
                        "x": [
                            0,
                            0,
                            0
                        ],
                        "y": [
                            6,
                            7,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'blue', 0, 6)\nput(board, 'nut', 'red', 0, 7)\nput(board, 'bridge-h', 'green', 0, 6)",
                                "output": [
                                    "put(board, 'washer', 'blue', 0, 6)",
                                    "put(board, 'nut', 'red', 0, 7)",
                                    "put(board, 'bridge-h', 'green', 0, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnb(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnb(board, ('blue', 'red', 'green'), 0, 6)",
                                "function": "def wnb(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnb(board, ('blue', 'red', 'green'), 0, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 7th column. place a red nut in the 1st row, 8th column. place a green bridge horizontally in the 1st row, 7th column. This is wnb.",
                                        "<Editor>": {
                                            "total_code": "def wnb(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnb(board, ('blue', 'red', 'green'), 0, 6)",
                                            "function": "def wnb(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnb(board, ('blue', 'red', 'green'), 0, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'red', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 0, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wbb": [
                    {
                        "combo_name": "wbb",
                        "shapes": [
                            "washer",
                            "bridge-v",
                            "bridge-v"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "red"
                        ],
                        "x": [
                            1,
                            2,
                            1
                        ],
                        "y": [
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            "vertical",
                            "vertical"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'green', 1, 4)\nput(board, 'bridge-v', 'yellow', 2, 4)\nput(board, 'bridge-v', 'red', 1, 4)",
                                "output": [
                                    "put(board, 'washer', 'green', 1, 4)",
                                    "put(board, 'bridge-v', 'yellow', 2, 4)",
                                    "put(board, 'bridge-v', 'red', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbb(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbb(board, ('green', 'yellow', 'red'), 1, 4)",
                                "function": "def wbb(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbb(board, ('green', 'yellow', 'red'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 5th column. place a yellow bridge vertically in the 3rd row, 5th column. place a red bridge vertically in the 2nd row, 5th column. This is wbb.",
                                        "<Editor>": {
                                            "total_code": "def wbb(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbb(board, ('green', 'yellow', 'red'), 1, 4)",
                                            "function": "def wbb(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbb(board, ('green', 'yellow', 'red'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wbb",
                        "shapes": [
                            "washer",
                            "bridge-h",
                            "bridge-h"
                        ],
                        "colors": [
                            "yellow",
                            "blue",
                            "green"
                        ],
                        "x": [
                            2,
                            2,
                            2
                        ],
                        "y": [
                            5,
                            6,
                            5
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 2, 5)\nput(board, 'bridge-h', 'blue', 2, 6)\nput(board, 'bridge-h', 'green', 2, 5)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 2, 5)",
                                    "put(board, 'bridge-h', 'blue', 2, 6)",
                                    "put(board, 'bridge-h', 'green', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbb(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbb(board, ('yellow', 'blue', 'green'), 2, 5)",
                                "function": "def wbb(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbb(board, ('yellow', 'blue', 'green'), 2, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 6th column. place a blue bridge horizontally in the 3rd row, 7th column. place a green bridge horizontally in the 3rd row, 6th column. This is wbb.",
                                        "<Editor>": {
                                            "total_code": "def wbb(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbb(board, ('yellow', 'blue', 'green'), 2, 5)",
                                            "function": "def wbb(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbb(board, ('yellow', 'blue', 'green'), 2, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 2, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nws": [
                    {
                        "combo_name": "nws",
                        "shapes": [
                            "nut",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "blue",
                            "green"
                        ],
                        "x": [
                            0,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'yellow', 0, 4)\nput(board, 'washer', 'blue', 0, 4)\nput(board, 'screw', 'green', 0, 4)",
                                "output": [
                                    "put(board, 'nut', 'yellow', 0, 4)",
                                    "put(board, 'washer', 'blue', 0, 4)",
                                    "put(board, 'screw', 'green', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nnws(board, ('yellow', 'blue', 'green'), 0, 4)",
                                "function": "def nws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "nws(board, ('yellow', 'blue', 'green'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 5th column. place a blue washer in the 1st row, 5th column. place a green screw in the 1st row, 5th column. This is nws.",
                                        "<Editor>": {
                                            "total_code": "def nws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nnws(board, ('yellow', 'blue', 'green'), 0, 4)",
                                            "function": "def nws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "nws(board, ('yellow', 'blue', 'green'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'green', 0, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nws",
                        "shapes": [
                            "nut",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            3,
                            3,
                            3
                        ],
                        "y": [
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 3, 6)\nput(board, 'washer', 'green', 3, 6)\nput(board, 'screw', 'yellow', 3, 6)",
                                "output": [
                                    "put(board, 'nut', 'blue', 3, 6)",
                                    "put(board, 'washer', 'green', 3, 6)",
                                    "put(board, 'screw', 'yellow', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nnws(board, ('blue', 'green', 'yellow'), 3, 6)",
                                "function": "def nws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "nws(board, ('blue', 'green', 'yellow'), 3, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 7th column. place a green washer in the 4th row, 7th column. place a yellow screw in the 4th row, 7th column. This is nws.",
                                        "<Editor>": {
                                            "total_code": "def nws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nnws(board, ('blue', 'green', 'yellow'), 3, 6)",
                                            "function": "def nws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "nws(board, ('blue', 'green', 'yellow'), 3, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 3, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nwb": [
                    {
                        "combo_name": "nwb",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-v"
                        ],
                        "colors": [
                            "yellow",
                            "green",
                            "blue"
                        ],
                        "x": [
                            0,
                            1,
                            0
                        ],
                        "y": [
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'yellow', 0, 7)\nput(board, 'washer', 'green', 1, 7)\nput(board, 'bridge-v', 'blue', 0, 7)",
                                "output": [
                                    "put(board, 'nut', 'yellow', 0, 7)",
                                    "put(board, 'washer', 'green', 1, 7)",
                                    "put(board, 'bridge-v', 'blue', 0, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwb(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwb(board, ('yellow', 'green', 'blue'), 0, 7)",
                                "function": "def nwb(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwb(board, ('yellow', 'green', 'blue'), 0, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 8th column. place a green washer in the 2nd row, 8th column. place a blue bridge vertically in the 1st row, 8th column. This is nwb.",
                                        "<Editor>": {
                                            "total_code": "def nwb(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwb(board, ('yellow', 'green', 'blue'), 0, 7)",
                                            "function": "def nwb(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwb(board, ('yellow', 'green', 'blue'), 0, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 0, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nwb",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-h"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            3,
                            3,
                            3
                        ],
                        "y": [
                            6,
                            7,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'red', 3, 6)\nput(board, 'washer', 'green', 3, 7)\nput(board, 'bridge-h', 'yellow', 3, 6)",
                                "output": [
                                    "put(board, 'nut', 'red', 3, 6)",
                                    "put(board, 'washer', 'green', 3, 7)",
                                    "put(board, 'bridge-h', 'yellow', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwb(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwb(board, ('red', 'green', 'yellow'), 3, 6)",
                                "function": "def nwb(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwb(board, ('red', 'green', 'yellow'), 3, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 4th row, 7th column. place a green washer in the 4th row, 8th column. place a yellow bridge horizontally in the 4th row, 7th column. This is nwb.",
                                        "<Editor>": {
                                            "total_code": "def nwb(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwb(board, ('red', 'green', 'yellow'), 3, 6)",
                                            "function": "def nwb(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwb(board, ('red', 'green', 'yellow'), 3, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'red', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nnb": [
                    {
                        "combo_name": "nnb",
                        "shapes": [
                            "nut",
                            "nut",
                            "bridge-v"
                        ],
                        "colors": [
                            "blue",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            1,
                            2,
                            1
                        ],
                        "y": [
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 1, 4)\nput(board, 'nut', 'green', 2, 4)\nput(board, 'bridge-v', 'yellow', 1, 4)",
                                "output": [
                                    "put(board, 'nut', 'blue', 1, 4)",
                                    "put(board, 'nut', 'green', 2, 4)",
                                    "put(board, 'bridge-v', 'yellow', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nnb(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnb(board, ('blue', 'green', 'yellow'), 1, 4)",
                                "function": "def nnb(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nnb(board, ('blue', 'green', 'yellow'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 2nd row, 5th column. place a green nut in the 3rd row, 5th column. place a yellow bridge vertically in the 2nd row, 5th column. This is nnb.",
                                        "<Editor>": {
                                            "total_code": "def nnb(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnb(board, ('blue', 'green', 'yellow'), 1, 4)",
                                            "function": "def nnb(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nnb(board, ('blue', 'green', 'yellow'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 1, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nnb",
                        "shapes": [
                            "nut",
                            "nut",
                            "bridge-h"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "blue"
                        ],
                        "x": [
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            5,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'red', 3, 4)\nput(board, 'nut', 'green', 3, 5)\nput(board, 'bridge-h', 'blue', 3, 4)",
                                "output": [
                                    "put(board, 'nut', 'red', 3, 4)",
                                    "put(board, 'nut', 'green', 3, 5)",
                                    "put(board, 'bridge-h', 'blue', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nnb(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnb(board, ('red', 'green', 'blue'), 3, 4)",
                                "function": "def nnb(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nnb(board, ('red', 'green', 'blue'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 4th row, 5th column. place a green nut in the 4th row, 6th column. place a blue bridge horizontally in the 4th row, 5th column. This is nnb.",
                                        "<Editor>": {
                                            "total_code": "def nnb(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnb(board, ('red', 'green', 'blue'), 3, 4)",
                                            "function": "def nnb(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nnb(board, ('red', 'green', 'blue'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'red', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 3, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nbb": [
                    {
                        "combo_name": "nbb",
                        "shapes": [
                            "nut",
                            "bridge-v",
                            "bridge-v"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "red"
                        ],
                        "x": [
                            0,
                            1,
                            0
                        ],
                        "y": [
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            "vertical",
                            "vertical"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 0, 7)\nput(board, 'bridge-v', 'yellow', 1, 7)\nput(board, 'bridge-v', 'red', 0, 7)",
                                "output": [
                                    "put(board, 'nut', 'blue', 0, 7)",
                                    "put(board, 'bridge-v', 'yellow', 1, 7)",
                                    "put(board, 'bridge-v', 'red', 0, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nbb(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbb(board, ('blue', 'yellow', 'red'), 0, 7)",
                                "function": "def nbb(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nbb(board, ('blue', 'yellow', 'red'), 0, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 8th column. place a yellow bridge vertically in the 2nd row, 8th column. place a red bridge vertically in the 1st row, 8th column. This is nbb.",
                                        "<Editor>": {
                                            "total_code": "def nbb(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbb(board, ('blue', 'yellow', 'red'), 0, 7)",
                                            "function": "def nbb(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nbb(board, ('blue', 'yellow', 'red'), 0, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 1, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 0, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nbb",
                        "shapes": [
                            "nut",
                            "bridge-h",
                            "bridge-h"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            0,
                            0,
                            0
                        ],
                        "y": [
                            5,
                            6,
                            5
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'red', 0, 5)\nput(board, 'bridge-h', 'yellow', 0, 6)\nput(board, 'bridge-h', 'green', 0, 5)",
                                "output": [
                                    "put(board, 'nut', 'red', 0, 5)",
                                    "put(board, 'bridge-h', 'yellow', 0, 6)",
                                    "put(board, 'bridge-h', 'green', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nbb(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbb(board, ('red', 'yellow', 'green'), 0, 5)",
                                "function": "def nbb(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nbb(board, ('red', 'yellow', 'green'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 1st row, 6th column. place a yellow bridge horizontally in the 1st row, 7th column. place a green bridge horizontally in the 1st row, 6th column. This is nbb.",
                                        "<Editor>": {
                                            "total_code": "def nbb(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbb(board, ('red', 'yellow', 'green'), 0, 5)",
                                            "function": "def nbb(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nbb(board, ('red', 'yellow', 'green'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'red', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 0, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bwn": [
                    {
                        "combo_name": "bwn",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            0,
                            0,
                            0
                        ],
                        "y": [
                            5,
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 1,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'blue', 0, 5)\nput(board, 'washer', 'yellow', 0, 6)\nput(board, 'nut', 'green', 0, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'blue', 0, 5)",
                                    "put(board, 'washer', 'yellow', 0, 6)",
                                    "put(board, 'nut', 'green', 0, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwn(board, ('blue', 'yellow', 'green'), 0, 5)",
                                "function": "def bwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwn(board, ('blue', 'yellow', 'green'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 1st row, 6th column. place a yellow washer in the 1st row, 7th column. place a green nut in the 1st row, 7th column. This is bwn.",
                                        "<Editor>": {
                                            "total_code": "def bwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwn(board, ('blue', 'yellow', 'green'), 0, 5)",
                                            "function": "def bwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwn(board, ('blue', 'yellow', 'green'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'green', 0, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwn",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            2,
                            2,
                            2
                        ],
                        "y": [
                            5,
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 1,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'red', 2, 5)\nput(board, 'washer', 'yellow', 2, 6)\nput(board, 'nut', 'blue', 2, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'red', 2, 5)",
                                    "put(board, 'washer', 'yellow', 2, 6)",
                                    "put(board, 'nut', 'blue', 2, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwn(board, ('red', 'yellow', 'blue'), 2, 5)",
                                "function": "def bwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwn(board, ('red', 'yellow', 'blue'), 2, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 3rd row, 6th column. place a yellow washer in the 3rd row, 7th column. place a blue nut in the 3rd row, 7th column. This is bwn.",
                                        "<Editor>": {
                                            "total_code": "def bwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwn(board, ('red', 'yellow', 'blue'), 2, 5)",
                                            "function": "def bwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwn(board, ('red', 'yellow', 'blue'), 2, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 2, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bws": [
                    {
                        "combo_name": "bws",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            1,
                            2,
                            2
                        ],
                        "y": [
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 1,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'green', 1, 7)\nput(board, 'washer', 'yellow', 2, 7)\nput(board, 'screw', 'green', 2, 7)",
                                "output": [
                                    "put(board, 'bridge-v', 'green', 1, 7)",
                                    "put(board, 'washer', 'yellow', 2, 7)",
                                    "put(board, 'screw', 'green', 2, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bws(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbws(board, ('green', 'yellow', 'green'), 1, 7)",
                                "function": "def bws(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bws(board, ('green', 'yellow', 'green'), 1, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 2nd row, 8th column. place a yellow washer in the 3rd row, 8th column. place a green screw in the 3rd row, 8th column. This is bws.",
                                        "<Editor>": {
                                            "total_code": "def bws(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbws(board, ('green', 'yellow', 'green'), 1, 7)",
                                            "function": "def bws(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bws(board, ('green', 'yellow', 'green'), 1, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 1, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'screw', 'green', 2, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bws",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "green",
                            "blue"
                        ],
                        "x": [
                            0,
                            1,
                            1
                        ],
                        "y": [
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 1,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'yellow', 0, 6)\nput(board, 'washer', 'green', 1, 6)\nput(board, 'screw', 'blue', 1, 6)",
                                "output": [
                                    "put(board, 'bridge-v', 'yellow', 0, 6)",
                                    "put(board, 'washer', 'green', 1, 6)",
                                    "put(board, 'screw', 'blue', 1, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bws(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbws(board, ('yellow', 'green', 'blue'), 0, 6)",
                                "function": "def bws(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bws(board, ('yellow', 'green', 'blue'), 0, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 1st row, 7th column. place a green washer in the 2nd row, 7th column. place a blue screw in the 2nd row, 7th column. This is bws.",
                                        "<Editor>": {
                                            "total_code": "def bws(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbws(board, ('yellow', 'green', 'blue'), 0, 6)",
                                            "function": "def bws(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bws(board, ('yellow', 'green', 'blue'), 0, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 1, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bwb": [
                    {
                        "combo_name": "bwb",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "bridge-v"
                        ],
                        "colors": [
                            "yellow",
                            "blue",
                            "red"
                        ],
                        "x": [
                            0,
                            1,
                            0
                        ],
                        "y": [
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'yellow', 0, 5)\nput(board, 'washer', 'blue', 1, 5)\nput(board, 'bridge-v', 'red', 0, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'yellow', 0, 5)",
                                    "put(board, 'washer', 'blue', 1, 5)",
                                    "put(board, 'bridge-v', 'red', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwb(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwb(board, ('yellow', 'blue', 'red'), 0, 5)",
                                "function": "def bwb(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwb(board, ('yellow', 'blue', 'red'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 1st row, 6th column. place a blue washer in the 2nd row, 6th column. place a red bridge vertically in the 1st row, 6th column. This is bwb.",
                                        "<Editor>": {
                                            "total_code": "def bwb(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwb(board, ('yellow', 'blue', 'red'), 0, 5)",
                                            "function": "def bwb(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwb(board, ('yellow', 'blue', 'red'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 0, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwb",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "bridge-h"
                        ],
                        "colors": [
                            "red",
                            "red",
                            "blue"
                        ],
                        "x": [
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            5,
                            4
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'red', 1, 4)\nput(board, 'washer', 'red', 1, 5)\nput(board, 'bridge-h', 'blue', 1, 4)",
                                "output": [
                                    "put(board, 'bridge-v', 'red', 1, 4)",
                                    "put(board, 'washer', 'red', 1, 5)",
                                    "put(board, 'bridge-h', 'blue', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwb(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwb(board, ('red', 'red', 'blue'), 1, 4)",
                                "function": "def bwb(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwb(board, ('red', 'red', 'blue'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 5th column. place a red washer in the 2nd row, 6th column. place a blue bridge horizontally in the 2nd row, 5th column. This is bwb.",
                                        "<Editor>": {
                                            "total_code": "def bwb(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwb(board, ('red', 'red', 'blue'), 1, 4)",
                                            "function": "def bwb(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwb(board, ('red', 'red', 'blue'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 1, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnw": [
                    {
                        "combo_name": "bnw",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            0,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'yellow', 0, 4)\nput(board, 'nut', 'green', 0, 4)\nput(board, 'washer', 'yellow', 0, 4)",
                                "output": [
                                    "put(board, 'bridge-h', 'yellow', 0, 4)",
                                    "put(board, 'nut', 'green', 0, 4)",
                                    "put(board, 'washer', 'yellow', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'washer']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbnw(board, ('yellow', 'green', 'yellow'), 0, 4)",
                                "function": "def bnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'washer']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "bnw(board, ('yellow', 'green', 'yellow'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 1st row, 5th column. place a green nut in the 1st row, 5th column. place a yellow washer in the 1st row, 5th column. This is bnw.",
                                        "<Editor>": {
                                            "total_code": "def bnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'washer']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbnw(board, ('yellow', 'green', 'yellow'), 0, 4)",
                                            "function": "def bnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'washer']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "bnw(board, ('yellow', 'green', 'yellow'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnw",
                        "shapes": [
                            "bridge-v",
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'red', 3, 4)\nput(board, 'nut', 'yellow', 3, 4)\nput(board, 'washer', 'green', 3, 4)",
                                "output": [
                                    "put(board, 'bridge-v', 'red', 3, 4)",
                                    "put(board, 'nut', 'yellow', 3, 4)",
                                    "put(board, 'washer', 'green', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnw(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'washer']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbnw(board, ('red', 'yellow', 'green'), 3, 4)",
                                "function": "def bnw(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'washer']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "bnw(board, ('red', 'yellow', 'green'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 4th row, 5th column. place a yellow nut in the 4th row, 5th column. place a green washer in the 4th row, 5th column. This is bnw.",
                                        "<Editor>": {
                                            "total_code": "def bnw(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'washer']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbnw(board, ('red', 'yellow', 'green'), 3, 4)",
                                            "function": "def bnw(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'washer']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "bnw(board, ('red', 'yellow', 'green'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bns": [
                    {
                        "combo_name": "bns",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            0,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 0, 4)\nput(board, 'nut', 'yellow', 0, 4)\nput(board, 'screw', 'green', 0, 4)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 0, 4)",
                                    "put(board, 'nut', 'yellow', 0, 4)",
                                    "put(board, 'screw', 'green', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbns(board, ('green', 'yellow', 'green'), 0, 4)",
                                "function": "def bns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "bns(board, ('green', 'yellow', 'green'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 1st row, 5th column. place a yellow nut in the 1st row, 5th column. place a green screw in the 1st row, 5th column. This is bns.",
                                        "<Editor>": {
                                            "total_code": "def bns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbns(board, ('green', 'yellow', 'green'), 0, 4)",
                                            "function": "def bns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "bns(board, ('green', 'yellow', 'green'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'green', 0, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bns",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "blue",
                            "green"
                        ],
                        "x": [
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 3, 4)\nput(board, 'nut', 'blue', 3, 4)\nput(board, 'screw', 'green', 3, 4)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 3, 4)",
                                    "put(board, 'nut', 'blue', 3, 4)",
                                    "put(board, 'screw', 'green', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbns(board, ('green', 'blue', 'green'), 3, 4)",
                                "function": "def bns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "bns(board, ('green', 'blue', 'green'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 4th row, 5th column. place a blue nut in the 4th row, 5th column. place a green screw in the 4th row, 5th column. This is bns.",
                                        "<Editor>": {
                                            "total_code": "def bns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbns(board, ('green', 'blue', 'green'), 3, 4)",
                                            "function": "def bns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "bns(board, ('green', 'blue', 'green'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'green', 3, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnb": [
                    {
                        "combo_name": "bnb",
                        "shapes": [
                            "bridge-v",
                            "nut",
                            "bridge-h"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            2,
                            2,
                            2
                        ],
                        "y": [
                            6,
                            7,
                            6
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'blue', 2, 6)\nput(board, 'nut', 'yellow', 2, 7)\nput(board, 'bridge-h', 'green', 2, 6)",
                                "output": [
                                    "put(board, 'bridge-v', 'blue', 2, 6)",
                                    "put(board, 'nut', 'yellow', 2, 7)",
                                    "put(board, 'bridge-h', 'green', 2, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnb(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnb(board, ('blue', 'yellow', 'green'), 2, 6)",
                                "function": "def bnb(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnb(board, ('blue', 'yellow', 'green'), 2, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 3rd row, 7th column. place a yellow nut in the 3rd row, 8th column. place a green bridge horizontally in the 3rd row, 7th column. This is bnb.",
                                        "<Editor>": {
                                            "total_code": "def bnb(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnb(board, ('blue', 'yellow', 'green'), 2, 6)",
                                            "function": "def bnb(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnb(board, ('blue', 'yellow', 'green'), 2, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 2, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnb",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            3,
                            4,
                            3
                        ],
                        "y": [
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'red', 3, 4)\nput(board, 'nut', 'green', 4, 4)\nput(board, 'bridge-v', 'yellow', 3, 4)",
                                "output": [
                                    "put(board, 'bridge-h', 'red', 3, 4)",
                                    "put(board, 'nut', 'green', 4, 4)",
                                    "put(board, 'bridge-v', 'yellow', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnb(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnb(board, ('red', 'green', 'yellow'), 3, 4)",
                                "function": "def bnb(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnb(board, ('red', 'green', 'yellow'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 5th column. place a green nut in the 5th row, 5th column. place a yellow bridge vertically in the 4th row, 5th column. This is bnb.",
                                        "<Editor>": {
                                            "total_code": "def bnb(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnb(board, ('red', 'green', 'yellow'), 3, 4)",
                                            "function": "def bnb(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0], [0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnb(board, ('red', 'green', 'yellow'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 5th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 4, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 3, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bbb": [
                    {
                        "combo_name": "bbb",
                        "shapes": [
                            "bridge-v",
                            "bridge-h",
                            "bridge-h"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            3,
                            3,
                            3
                        ],
                        "y": [
                            5,
                            6,
                            5
                        ],
                        "orientations": [
                            "vertical",
                            "horizontal",
                            "horizontal"
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'green', 3, 5)\nput(board, 'bridge-h', 'green', 3, 6)\nput(board, 'bridge-h', 'yellow', 3, 5)",
                                "output": [
                                    "put(board, 'bridge-v', 'green', 3, 5)",
                                    "put(board, 'bridge-h', 'green', 3, 6)",
                                    "put(board, 'bridge-h', 'yellow', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbb(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbb(board, ('green', 'green', 'yellow'), 3, 5)",
                                "function": "def bbb(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbb(board, ('green', 'green', 'yellow'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/threeshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/threeshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 6th column. place a green bridge horizontally in the 4th row, 7th column. place a yellow bridge horizontally in the 4th row, 6th column. This is bbb.",
                                        "<Editor>": {
                                            "total_code": "def bbb(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbb(board, ('green', 'green', 'yellow'), 3, 5)",
                                            "function": "def bbb(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0], [0, 1, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbb(board, ('green', 'green', 'yellow'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "4": {
                "wwbn": [
                    {
                        "combo_name": "wwbn",
                        "shapes": [
                            "washer",
                            "washer",
                            "bridge-h",
                            "nut"
                        ],
                        "colors": [
                            "yellow",
                            "green",
                            "blue",
                            "red"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 0, 4)\nput(board, 'washer', 'green', 0, 5)\nput(board, 'bridge-h', 'blue', 0, 4)\nput(board, 'nut', 'red', 0, 4)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 0, 4)",
                                    "put(board, 'washer', 'green', 0, 5)",
                                    "put(board, 'bridge-h', 'blue', 0, 4)",
                                    "put(board, 'nut', 'red', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wwbn(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbn(board, ('yellow', 'green', 'blue', 'red'), 0, 4)",
                                "function": "def wwbn(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wwbn(board, ('yellow', 'green', 'blue', 'red'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 5th column. place a green washer in the 1st row, 6th column. place a blue bridge horizontally in the 1st row, 5th column. place a red nut in the 1st row, 5th column. This is wwbn.",
                                        "<Editor>": {
                                            "total_code": "def wwbn(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbn(board, ('yellow', 'green', 'blue', 'red'), 0, 4)",
                                            "function": "def wwbn(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wwbn(board, ('yellow', 'green', 'blue', 'red'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'red', 0, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wwbn",
                        "shapes": [
                            "washer",
                            "washer",
                            "bridge-h",
                            "nut"
                        ],
                        "colors": [
                            "green",
                            "red",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'green', 3, 5)\nput(board, 'washer', 'red', 3, 6)\nput(board, 'bridge-h', 'yellow', 3, 5)\nput(board, 'nut', 'blue', 3, 6)",
                                "output": [
                                    "put(board, 'washer', 'green', 3, 5)",
                                    "put(board, 'washer', 'red', 3, 6)",
                                    "put(board, 'bridge-h', 'yellow', 3, 5)",
                                    "put(board, 'nut', 'blue', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wwbn(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbn(board, ('green', 'red', 'yellow', 'blue'), 3, 5)",
                                "function": "def wwbn(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wwbn(board, ('green', 'red', 'yellow', 'blue'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 6th column. place a red washer in the 4th row, 7th column. place a yellow bridge horizontally in the 4th row, 6th column. place a blue nut in the 4th row, 7th column. This is wwbn.",
                                        "<Editor>": {
                                            "total_code": "def wwbn(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbn(board, ('green', 'red', 'yellow', 'blue'), 3, 5)",
                                            "function": "def wwbn(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wwbn(board, ('green', 'red', 'yellow', 'blue'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'red', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wwbs": [
                    {
                        "combo_name": "wwbs",
                        "shapes": [
                            "washer",
                            "washer",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "red",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'blue', 3, 4)\nput(board, 'washer', 'red', 3, 5)\nput(board, 'bridge-h', 'green', 3, 4)\nput(board, 'screw', 'yellow', 3, 4)",
                                "output": [
                                    "put(board, 'washer', 'blue', 3, 4)",
                                    "put(board, 'washer', 'red', 3, 5)",
                                    "put(board, 'bridge-h', 'green', 3, 4)",
                                    "put(board, 'screw', 'yellow', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wwbs(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbs(board, ('blue', 'red', 'green', 'yellow'), 3, 4)",
                                "function": "def wwbs(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wwbs(board, ('blue', 'red', 'green', 'yellow'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 4th row, 5th column. place a red washer in the 4th row, 6th column. place a green bridge horizontally in the 4th row, 5th column. place a yellow screw in the 4th row, 5th column. This is wwbs.",
                                        "<Editor>": {
                                            "total_code": "def wwbs(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbs(board, ('blue', 'red', 'green', 'yellow'), 3, 4)",
                                            "function": "def wwbs(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wwbs(board, ('blue', 'red', 'green', 'yellow'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'red', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 3, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wwbs",
                        "shapes": [
                            "washer",
                            "washer",
                            "bridge-v",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "red",
                            "blue"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 0, 6)\nput(board, 'washer', 'yellow', 1, 6)\nput(board, 'bridge-v', 'red', 0, 6)\nput(board, 'screw', 'blue', 0, 6)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 0, 6)",
                                    "put(board, 'washer', 'yellow', 1, 6)",
                                    "put(board, 'bridge-v', 'red', 0, 6)",
                                    "put(board, 'screw', 'blue', 0, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wwbs(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbs(board, ('yellow', 'yellow', 'red', 'blue'), 0, 6)",
                                "function": "def wwbs(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wwbs(board, ('yellow', 'yellow', 'red', 'blue'), 0, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 7th column. place a yellow washer in the 2nd row, 7th column. place a red bridge vertically in the 1st row, 7th column. place a blue screw in the 1st row, 7th column. This is wwbs.",
                                        "<Editor>": {
                                            "total_code": "def wwbs(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbs(board, ('yellow', 'yellow', 'red', 'blue'), 0, 6)",
                                            "function": "def wwbs(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wwbs(board, ('yellow', 'yellow', 'red', 'blue'), 0, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 0, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wnbw": [
                    {
                        "combo_name": "wnbw",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-h",
                            "washer"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            1,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            5
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 1, 4)\nput(board, 'nut', 'yellow', 1, 5)\nput(board, 'bridge-h', 'green', 1, 4)\nput(board, 'washer', 'yellow', 1, 5)",
                                "output": [
                                    "put(board, 'washer', 'red', 1, 4)",
                                    "put(board, 'nut', 'yellow', 1, 5)",
                                    "put(board, 'bridge-h', 'green', 1, 4)",
                                    "put(board, 'washer', 'yellow', 1, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnbw(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbw(board, ('red', 'yellow', 'green', 'yellow'), 1, 4)",
                                "function": "def wnbw(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnbw(board, ('red', 'yellow', 'green', 'yellow'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 5th column. place a yellow nut in the 2nd row, 6th column. place a green bridge horizontally in the 2nd row, 5th column. place a yellow washer in the 2nd row, 6th column. This is wnbw.",
                                        "<Editor>": {
                                            "total_code": "def wnbw(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbw(board, ('red', 'yellow', 'green', 'yellow'), 1, 4)",
                                            "function": "def wnbw(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnbw(board, ('red', 'yellow', 'green', 'yellow'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'red', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 1, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wnbw",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "green",
                            "red"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            3
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 2, 4)\nput(board, 'nut', 'yellow', 3, 4)\nput(board, 'bridge-v', 'green', 2, 4)\nput(board, 'washer', 'red', 3, 4)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 2, 4)",
                                    "put(board, 'nut', 'yellow', 3, 4)",
                                    "put(board, 'bridge-v', 'green', 2, 4)",
                                    "put(board, 'washer', 'red', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnbw(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbw(board, ('yellow', 'yellow', 'green', 'red'), 2, 4)",
                                "function": "def wnbw(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnbw(board, ('yellow', 'yellow', 'green', 'red'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 5th column. place a yellow nut in the 4th row, 5th column. place a green bridge vertically in the 3rd row, 5th column. place a red washer in the 4th row, 5th column. This is wnbw.",
                                        "<Editor>": {
                                            "total_code": "def wnbw(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbw(board, ('yellow', 'yellow', 'green', 'red'), 2, 4)",
                                            "function": "def wnbw(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnbw(board, ('yellow', 'yellow', 'green', 'red'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'red', 3, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wnbn": [
                    {
                        "combo_name": "wnbn",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-v",
                            "nut"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "green",
                            "yellow"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 0, 4)\nput(board, 'nut', 'yellow', 1, 4)\nput(board, 'bridge-v', 'green', 0, 4)\nput(board, 'nut', 'yellow', 0, 4)",
                                "output": [
                                    "put(board, 'washer', 'red', 0, 4)",
                                    "put(board, 'nut', 'yellow', 1, 4)",
                                    "put(board, 'bridge-v', 'green', 0, 4)",
                                    "put(board, 'nut', 'yellow', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnbn(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbn(board, ('red', 'yellow', 'green', 'yellow'), 0, 4)",
                                "function": "def wnbn(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnbn(board, ('red', 'yellow', 'green', 'yellow'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 1st row, 5th column. place a yellow nut in the 2nd row, 5th column. place a green bridge vertically in the 1st row, 5th column. place a yellow nut in the 1st row, 5th column. This is wnbn.",
                                        "<Editor>": {
                                            "total_code": "def wnbn(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbn(board, ('red', 'yellow', 'green', 'yellow'), 0, 4)",
                                            "function": "def wnbn(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnbn(board, ('red', 'yellow', 'green', 'yellow'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'red', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 0, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wnbn",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-h",
                            "nut"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "blue",
                            "yellow"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            6,
                            7,
                            6,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 3, 6)\nput(board, 'nut', 'yellow', 3, 7)\nput(board, 'bridge-h', 'blue', 3, 6)\nput(board, 'nut', 'yellow', 3, 6)",
                                "output": [
                                    "put(board, 'washer', 'red', 3, 6)",
                                    "put(board, 'nut', 'yellow', 3, 7)",
                                    "put(board, 'bridge-h', 'blue', 3, 6)",
                                    "put(board, 'nut', 'yellow', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnbn(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbn(board, ('red', 'yellow', 'blue', 'yellow'), 3, 6)",
                                "function": "def wnbn(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnbn(board, ('red', 'yellow', 'blue', 'yellow'), 3, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 7th column. place a yellow nut in the 4th row, 8th column. place a blue bridge horizontally in the 4th row, 7th column. place a yellow nut in the 4th row, 7th column. This is wnbn.",
                                        "<Editor>": {
                                            "total_code": "def wnbn(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbn(board, ('red', 'yellow', 'blue', 'yellow'), 3, 6)",
                                            "function": "def wnbn(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnbn(board, ('red', 'yellow', 'blue', 'yellow'), 3, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'red', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 3, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wnbs": [
                    {
                        "combo_name": "wnbs",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-v",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "blue",
                            "red",
                            "blue"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            3
                        ],
                        "y": [
                            7,
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'blue', 2, 7)\nput(board, 'nut', 'blue', 3, 7)\nput(board, 'bridge-v', 'red', 2, 7)\nput(board, 'screw', 'blue', 3, 7)",
                                "output": [
                                    "put(board, 'washer', 'blue', 2, 7)",
                                    "put(board, 'nut', 'blue', 3, 7)",
                                    "put(board, 'bridge-v', 'red', 2, 7)",
                                    "put(board, 'screw', 'blue', 3, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnbs(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbs(board, ('blue', 'blue', 'red', 'blue'), 2, 7)",
                                "function": "def wnbs(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnbs(board, ('blue', 'blue', 'red', 'blue'), 2, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 3rd row, 8th column. place a blue nut in the 4th row, 8th column. place a red bridge vertically in the 3rd row, 8th column. place a blue screw in the 4th row, 8th column. This is wnbs.",
                                        "<Editor>": {
                                            "total_code": "def wnbs(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbs(board, ('blue', 'blue', 'red', 'blue'), 2, 7)",
                                            "function": "def wnbs(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnbs(board, ('blue', 'blue', 'red', 'blue'), 2, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 3, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wnbs",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "blue",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            2,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            5
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 2, 4)\nput(board, 'nut', 'blue', 2, 5)\nput(board, 'bridge-h', 'red', 2, 4)\nput(board, 'screw', 'yellow', 2, 5)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 2, 4)",
                                    "put(board, 'nut', 'blue', 2, 5)",
                                    "put(board, 'bridge-h', 'red', 2, 4)",
                                    "put(board, 'screw', 'yellow', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnbs(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbs(board, ('yellow', 'blue', 'red', 'yellow'), 2, 4)",
                                "function": "def wnbs(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnbs(board, ('yellow', 'blue', 'red', 'yellow'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 5th column. place a blue nut in the 3rd row, 6th column. place a red bridge horizontally in the 3rd row, 5th column. place a yellow screw in the 3rd row, 6th column. This is wnbs.",
                                        "<Editor>": {
                                            "total_code": "def wnbs(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbs(board, ('yellow', 'blue', 'red', 'yellow'), 2, 4)",
                                            "function": "def wnbs(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnbs(board, ('yellow', 'blue', 'red', 'yellow'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 2, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wbbw": [
                    {
                        "combo_name": "wbbw",
                        "shapes": [
                            "washer",
                            "bridge-v",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "blue",
                            "red",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            3
                        ],
                        "y": [
                            7,
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            "vertical",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'blue', 2, 7)\nput(board, 'bridge-v', 'red', 3, 7)\nput(board, 'bridge-v', 'yellow', 2, 7)\nput(board, 'washer', 'blue', 3, 7)",
                                "output": [
                                    "put(board, 'washer', 'blue', 2, 7)",
                                    "put(board, 'bridge-v', 'red', 3, 7)",
                                    "put(board, 'bridge-v', 'yellow', 2, 7)",
                                    "put(board, 'washer', 'blue', 3, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbbw(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbw(board, ('blue', 'red', 'yellow', 'blue'), 2, 7)",
                                "function": "def wbbw(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbbw(board, ('blue', 'red', 'yellow', 'blue'), 2, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 3rd row, 8th column. place a red bridge vertically in the 4th row, 8th column. place a yellow bridge vertically in the 3rd row, 8th column. place a blue washer in the 4th row, 8th column. This is wbbw.",
                                        "<Editor>": {
                                            "total_code": "def wbbw(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbw(board, ('blue', 'red', 'yellow', 'blue'), 2, 7)",
                                            "function": "def wbbw(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbbw(board, ('blue', 'red', 'yellow', 'blue'), 2, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 3, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wbbw",
                        "shapes": [
                            "washer",
                            "bridge-h",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "red",
                            "red",
                            "blue",
                            "yellow"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            3
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 2, 5)\nput(board, 'bridge-h', 'red', 3, 5)\nput(board, 'bridge-v', 'blue', 2, 5)\nput(board, 'washer', 'yellow', 3, 5)",
                                "output": [
                                    "put(board, 'washer', 'red', 2, 5)",
                                    "put(board, 'bridge-h', 'red', 3, 5)",
                                    "put(board, 'bridge-v', 'blue', 2, 5)",
                                    "put(board, 'washer', 'yellow', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbbw(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbw(board, ('red', 'red', 'blue', 'yellow'), 2, 5)",
                                "function": "def wbbw(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbbw(board, ('red', 'red', 'blue', 'yellow'), 2, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 3rd row, 6th column. place a red bridge horizontally in the 4th row, 6th column. place a blue bridge vertically in the 3rd row, 6th column. place a yellow washer in the 4th row, 6th column. This is wbbw.",
                                        "<Editor>": {
                                            "total_code": "def wbbw(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbw(board, ('red', 'red', 'blue', 'yellow'), 2, 5)",
                                            "function": "def wbbw(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbbw(board, ('red', 'red', 'blue', 'yellow'), 2, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'red', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 3, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wbbn": [
                    {
                        "combo_name": "wbbn",
                        "shapes": [
                            "washer",
                            "bridge-v",
                            "bridge-h",
                            "nut"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "blue",
                            "red"
                        ],
                        "x": [
                            1,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            "vertical",
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'green', 1, 4)\nput(board, 'bridge-v', 'yellow', 1, 5)\nput(board, 'bridge-h', 'blue', 1, 4)\nput(board, 'nut', 'red', 1, 4)",
                                "output": [
                                    "put(board, 'washer', 'green', 1, 4)",
                                    "put(board, 'bridge-v', 'yellow', 1, 5)",
                                    "put(board, 'bridge-h', 'blue', 1, 4)",
                                    "put(board, 'nut', 'red', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbbn(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbn(board, ('green', 'yellow', 'blue', 'red'), 1, 4)",
                                "function": "def wbbn(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbbn(board, ('green', 'yellow', 'blue', 'red'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 5th column. place a yellow bridge vertically in the 2nd row, 6th column. place a blue bridge horizontally in the 2nd row, 5th column. place a red nut in the 2nd row, 5th column. This is wbbn.",
                                        "<Editor>": {
                                            "total_code": "def wbbn(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbn(board, ('green', 'yellow', 'blue', 'red'), 1, 4)",
                                            "function": "def wbbn(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbbn(board, ('green', 'yellow', 'blue', 'red'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'red', 1, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wbbn",
                        "shapes": [
                            "washer",
                            "bridge-h",
                            "bridge-v",
                            "nut"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "green",
                            "blue"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            3
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 2, 4)\nput(board, 'bridge-h', 'yellow', 3, 4)\nput(board, 'bridge-v', 'green', 2, 4)\nput(board, 'nut', 'blue', 3, 4)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 2, 4)",
                                    "put(board, 'bridge-h', 'yellow', 3, 4)",
                                    "put(board, 'bridge-v', 'green', 2, 4)",
                                    "put(board, 'nut', 'blue', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbbn(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbn(board, ('yellow', 'yellow', 'green', 'blue'), 2, 4)",
                                "function": "def wbbn(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbbn(board, ('yellow', 'yellow', 'green', 'blue'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 5th column. place a yellow bridge horizontally in the 4th row, 5th column. place a green bridge vertically in the 3rd row, 5th column. place a blue nut in the 4th row, 5th column. This is wbbn.",
                                        "<Editor>": {
                                            "total_code": "def wbbn(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbn(board, ('yellow', 'yellow', 'green', 'blue'), 2, 4)",
                                            "function": "def wbbn(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbbn(board, ('yellow', 'yellow', 'green', 'blue'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wbbs": [
                    {
                        "combo_name": "wbbs",
                        "shapes": [
                            "washer",
                            "bridge-v",
                            "bridge-v",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "blue",
                            "red",
                            "green"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            1
                        ],
                        "y": [
                            7,
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            "vertical",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'green', 0, 7)\nput(board, 'bridge-v', 'blue', 1, 7)\nput(board, 'bridge-v', 'red', 0, 7)\nput(board, 'screw', 'green', 1, 7)",
                                "output": [
                                    "put(board, 'washer', 'green', 0, 7)",
                                    "put(board, 'bridge-v', 'blue', 1, 7)",
                                    "put(board, 'bridge-v', 'red', 0, 7)",
                                    "put(board, 'screw', 'green', 1, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbbs(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbs(board, ('green', 'blue', 'red', 'green'), 0, 7)",
                                "function": "def wbbs(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbbs(board, ('green', 'blue', 'red', 'green'), 0, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 1st row, 8th column. place a blue bridge vertically in the 2nd row, 8th column. place a red bridge vertically in the 1st row, 8th column. place a green screw in the 2nd row, 8th column. This is wbbs.",
                                        "<Editor>": {
                                            "total_code": "def wbbs(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbs(board, ('green', 'blue', 'red', 'green'), 0, 7)",
                                            "function": "def wbbs(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbbs(board, ('green', 'blue', 'red', 'green'), 0, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'green', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 1, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'screw', 'green', 1, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wbbs",
                        "shapes": [
                            "washer",
                            "bridge-h",
                            "bridge-v",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'blue', 0, 5)\nput(board, 'bridge-h', 'yellow', 1, 5)\nput(board, 'bridge-v', 'red', 0, 5)\nput(board, 'screw', 'yellow', 0, 5)",
                                "output": [
                                    "put(board, 'washer', 'blue', 0, 5)",
                                    "put(board, 'bridge-h', 'yellow', 1, 5)",
                                    "put(board, 'bridge-v', 'red', 0, 5)",
                                    "put(board, 'screw', 'yellow', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbbs(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbs(board, ('blue', 'yellow', 'red', 'yellow'), 0, 5)",
                                "function": "def wbbs(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbbs(board, ('blue', 'yellow', 'red', 'yellow'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 6th column. place a yellow bridge horizontally in the 2nd row, 6th column. place a red bridge vertically in the 1st row, 6th column. place a yellow screw in the 1st row, 6th column. This is wbbs.",
                                        "<Editor>": {
                                            "total_code": "def wbbs(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbs(board, ('blue', 'yellow', 'red', 'yellow'), 0, 5)",
                                            "function": "def wbbs(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbbs(board, ('blue', 'yellow', 'red', 'yellow'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 0, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nwbw": [
                    {
                        "combo_name": "nwbw",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-h",
                            "washer"
                        ],
                        "colors": [
                            "red",
                            "red",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            1,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            5
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'red', 1, 5)\nput(board, 'washer', 'red', 1, 6)\nput(board, 'bridge-h', 'yellow', 1, 5)\nput(board, 'washer', 'blue', 1, 5)",
                                "output": [
                                    "put(board, 'nut', 'red', 1, 5)",
                                    "put(board, 'washer', 'red', 1, 6)",
                                    "put(board, 'bridge-h', 'yellow', 1, 5)",
                                    "put(board, 'washer', 'blue', 1, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwbw(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbw(board, ('red', 'red', 'yellow', 'blue'), 1, 5)",
                                "function": "def nwbw(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwbw(board, ('red', 'red', 'yellow', 'blue'), 1, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 2nd row, 6th column. place a red washer in the 2nd row, 7th column. place a yellow bridge horizontally in the 2nd row, 6th column. place a blue washer in the 2nd row, 6th column. This is nwbw.",
                                        "<Editor>": {
                                            "total_code": "def nwbw(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbw(board, ('red', 'red', 'yellow', 'blue'), 1, 5)",
                                            "function": "def nwbw(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwbw(board, ('red', 'red', 'yellow', 'blue'), 1, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'red', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 1, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nwbw",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "blue",
                            "blue",
                            "red",
                            "blue"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 3, 4)\nput(board, 'washer', 'blue', 4, 4)\nput(board, 'bridge-v', 'red', 3, 4)\nput(board, 'washer', 'blue', 3, 4)",
                                "output": [
                                    "put(board, 'nut', 'blue', 3, 4)",
                                    "put(board, 'washer', 'blue', 4, 4)",
                                    "put(board, 'bridge-v', 'red', 3, 4)",
                                    "put(board, 'washer', 'blue', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwbw(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbw(board, ('blue', 'blue', 'red', 'blue'), 3, 4)",
                                "function": "def nwbw(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwbw(board, ('blue', 'blue', 'red', 'blue'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column. place a blue washer in the 5th row, 5th column. place a red bridge vertically in the 4th row, 5th column. place a blue washer in the 4th row, 5th column. This is nwbw.",
                                        "<Editor>": {
                                            "total_code": "def nwbw(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbw(board, ('blue', 'blue', 'red', 'blue'), 3, 4)",
                                            "function": "def nwbw(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwbw(board, ('blue', 'blue', 'red', 'blue'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 5th row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 4, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 3, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nwbn": [
                    {
                        "combo_name": "nwbn",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-h",
                            "nut"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "red",
                            "green"
                        ],
                        "x": [
                            2,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 2, 5)\nput(board, 'washer', 'yellow', 2, 6)\nput(board, 'bridge-h', 'red', 2, 5)\nput(board, 'nut', 'green', 2, 6)",
                                "output": [
                                    "put(board, 'nut', 'blue', 2, 5)",
                                    "put(board, 'washer', 'yellow', 2, 6)",
                                    "put(board, 'bridge-h', 'red', 2, 5)",
                                    "put(board, 'nut', 'green', 2, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwbn(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbn(board, ('blue', 'yellow', 'red', 'green'), 2, 5)",
                                "function": "def nwbn(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwbn(board, ('blue', 'yellow', 'red', 'green'), 2, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 6th column. place a yellow washer in the 3rd row, 7th column. place a red bridge horizontally in the 3rd row, 6th column. place a green nut in the 3rd row, 7th column. This is nwbn.",
                                        "<Editor>": {
                                            "total_code": "def nwbn(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbn(board, ('blue', 'yellow', 'red', 'green'), 2, 5)",
                                            "function": "def nwbn(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwbn(board, ('blue', 'yellow', 'red', 'green'), 2, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nwbn",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-h",
                            "nut"
                        ],
                        "colors": [
                            "yellow",
                            "green",
                            "blue",
                            "red"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'yellow', 3, 5)\nput(board, 'washer', 'green', 3, 6)\nput(board, 'bridge-h', 'blue', 3, 5)\nput(board, 'nut', 'red', 3, 6)",
                                "output": [
                                    "put(board, 'nut', 'yellow', 3, 5)",
                                    "put(board, 'washer', 'green', 3, 6)",
                                    "put(board, 'bridge-h', 'blue', 3, 5)",
                                    "put(board, 'nut', 'red', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwbn(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbn(board, ('yellow', 'green', 'blue', 'red'), 3, 5)",
                                "function": "def nwbn(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwbn(board, ('yellow', 'green', 'blue', 'red'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 6th column. place a green washer in the 4th row, 7th column. place a blue bridge horizontally in the 4th row, 6th column. place a red nut in the 4th row, 7th column. This is nwbn.",
                                        "<Editor>": {
                                            "total_code": "def nwbn(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbn(board, ('yellow', 'green', 'blue', 'red'), 3, 5)",
                                            "function": "def nwbn(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwbn(board, ('yellow', 'green', 'blue', 'red'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'red', 3, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nwbs": [
                    {
                        "combo_name": "nwbs",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-v",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "green",
                            "red"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            2
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 1, 4)\nput(board, 'washer', 'yellow', 2, 4)\nput(board, 'bridge-v', 'green', 1, 4)\nput(board, 'screw', 'red', 2, 4)",
                                "output": [
                                    "put(board, 'nut', 'blue', 1, 4)",
                                    "put(board, 'washer', 'yellow', 2, 4)",
                                    "put(board, 'bridge-v', 'green', 1, 4)",
                                    "put(board, 'screw', 'red', 2, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwbs(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbs(board, ('blue', 'yellow', 'green', 'red'), 1, 4)",
                                "function": "def nwbs(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwbs(board, ('blue', 'yellow', 'green', 'red'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 2nd row, 5th column. place a yellow washer in the 3rd row, 5th column. place a green bridge vertically in the 2nd row, 5th column. place a red screw in the 3rd row, 5th column. This is nwbs.",
                                        "<Editor>": {
                                            "total_code": "def nwbs(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbs(board, ('blue', 'yellow', 'green', 'red'), 1, 4)",
                                            "function": "def nwbs(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwbs(board, ('blue', 'yellow', 'green', 'red'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'red', 2, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nwbs",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "blue",
                            "red"
                        ],
                        "x": [
                            2,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            5
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'red', 2, 4)\nput(board, 'washer', 'green', 2, 5)\nput(board, 'bridge-h', 'blue', 2, 4)\nput(board, 'screw', 'red', 2, 5)",
                                "output": [
                                    "put(board, 'nut', 'red', 2, 4)",
                                    "put(board, 'washer', 'green', 2, 5)",
                                    "put(board, 'bridge-h', 'blue', 2, 4)",
                                    "put(board, 'screw', 'red', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwbs(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbs(board, ('red', 'green', 'blue', 'red'), 2, 4)",
                                "function": "def nwbs(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwbs(board, ('red', 'green', 'blue', 'red'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 3rd row, 5th column. place a green washer in the 3rd row, 6th column. place a blue bridge horizontally in the 3rd row, 5th column. place a red screw in the 3rd row, 6th column. This is nwbs.",
                                        "<Editor>": {
                                            "total_code": "def nwbs(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbs(board, ('red', 'green', 'blue', 'red'), 2, 4)",
                                            "function": "def nwbs(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwbs(board, ('red', 'green', 'blue', 'red'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red nut in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'red', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'red', 2, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nnbw": [
                    {
                        "combo_name": "nnbw",
                        "shapes": [
                            "nut",
                            "nut",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "blue",
                            "blue",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 3, 6)\nput(board, 'nut', 'blue', 4, 6)\nput(board, 'bridge-v', 'yellow', 3, 6)\nput(board, 'washer', 'green', 3, 6)",
                                "output": [
                                    "put(board, 'nut', 'blue', 3, 6)",
                                    "put(board, 'nut', 'blue', 4, 6)",
                                    "put(board, 'bridge-v', 'yellow', 3, 6)",
                                    "put(board, 'washer', 'green', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nnbw(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbw(board, ('blue', 'blue', 'yellow', 'green'), 3, 6)",
                                "function": "def nnbw(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nnbw(board, ('blue', 'blue', 'yellow', 'green'), 3, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 7th column. place a blue nut in the 5th row, 7th column. place a yellow bridge vertically in the 4th row, 7th column. place a green washer in the 4th row, 7th column. This is nnbw.",
                                        "<Editor>": {
                                            "total_code": "def nnbw(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbw(board, ('blue', 'blue', 'yellow', 'green'), 3, 6)",
                                            "function": "def nnbw(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nnbw(board, ('blue', 'blue', 'yellow', 'green'), 3, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 5th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 4, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nnbw",
                        "shapes": [
                            "nut",
                            "nut",
                            "bridge-h",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "red",
                            "blue",
                            "yellow"
                        ],
                        "x": [
                            2,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'yellow', 2, 4)\nput(board, 'nut', 'red', 2, 5)\nput(board, 'bridge-h', 'blue', 2, 4)\nput(board, 'washer', 'yellow', 2, 4)",
                                "output": [
                                    "put(board, 'nut', 'yellow', 2, 4)",
                                    "put(board, 'nut', 'red', 2, 5)",
                                    "put(board, 'bridge-h', 'blue', 2, 4)",
                                    "put(board, 'washer', 'yellow', 2, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nnbw(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbw(board, ('yellow', 'red', 'blue', 'yellow'), 2, 4)",
                                "function": "def nnbw(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nnbw(board, ('yellow', 'red', 'blue', 'yellow'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 3rd row, 5th column. place a red nut in the 3rd row, 6th column. place a blue bridge horizontally in the 3rd row, 5th column. place a yellow washer in the 3rd row, 5th column. This is nnbw.",
                                        "<Editor>": {
                                            "total_code": "def nnbw(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbw(board, ('yellow', 'red', 'blue', 'yellow'), 2, 4)",
                                            "function": "def nnbw(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nnbw(board, ('yellow', 'red', 'blue', 'yellow'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'red', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nnbs": [
                    {
                        "combo_name": "nnbs",
                        "shapes": [
                            "nut",
                            "nut",
                            "bridge-v",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "green",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            1
                        ],
                        "y": [
                            7,
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'yellow', 0, 7)\nput(board, 'nut', 'green', 1, 7)\nput(board, 'bridge-v', 'red', 0, 7)\nput(board, 'screw', 'yellow', 1, 7)",
                                "output": [
                                    "put(board, 'nut', 'yellow', 0, 7)",
                                    "put(board, 'nut', 'green', 1, 7)",
                                    "put(board, 'bridge-v', 'red', 0, 7)",
                                    "put(board, 'screw', 'yellow', 1, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nnbs(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbs(board, ('yellow', 'green', 'red', 'yellow'), 0, 7)",
                                "function": "def nnbs(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nnbs(board, ('yellow', 'green', 'red', 'yellow'), 0, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 8th column. place a green nut in the 2nd row, 8th column. place a red bridge vertically in the 1st row, 8th column. place a yellow screw in the 2nd row, 8th column. This is nnbs.",
                                        "<Editor>": {
                                            "total_code": "def nnbs(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbs(board, ('yellow', 'green', 'red', 'yellow'), 0, 7)",
                                            "function": "def nnbs(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nnbs(board, ('yellow', 'green', 'red', 'yellow'), 0, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'green', 1, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 1, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nnbs",
                        "shapes": [
                            "nut",
                            "nut",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            2,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'green', 2, 4)\nput(board, 'nut', 'green', 2, 5)\nput(board, 'bridge-h', 'yellow', 2, 4)\nput(board, 'screw', 'blue', 2, 4)",
                                "output": [
                                    "put(board, 'nut', 'green', 2, 4)",
                                    "put(board, 'nut', 'green', 2, 5)",
                                    "put(board, 'bridge-h', 'yellow', 2, 4)",
                                    "put(board, 'screw', 'blue', 2, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nnbs(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbs(board, ('green', 'green', 'yellow', 'blue'), 2, 4)",
                                "function": "def nnbs(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nnbs(board, ('green', 'green', 'yellow', 'blue'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 5th column. place a green nut in the 3rd row, 6th column. place a yellow bridge horizontally in the 3rd row, 5th column. place a blue screw in the 3rd row, 5th column. This is nnbs.",
                                        "<Editor>": {
                                            "total_code": "def nnbs(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbs(board, ('green', 'green', 'yellow', 'blue'), 2, 4)",
                                            "function": "def nnbs(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nnbs(board, ('green', 'green', 'yellow', 'blue'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 2, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nbbw": [
                    {
                        "combo_name": "nbbw",
                        "shapes": [
                            "nut",
                            "bridge-h",
                            "bridge-h",
                            "washer"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 0, 4)\nput(board, 'bridge-h', 'yellow', 0, 5)\nput(board, 'bridge-h', 'red', 0, 4)\nput(board, 'washer', 'yellow', 0, 4)",
                                "output": [
                                    "put(board, 'nut', 'blue', 0, 4)",
                                    "put(board, 'bridge-h', 'yellow', 0, 5)",
                                    "put(board, 'bridge-h', 'red', 0, 4)",
                                    "put(board, 'washer', 'yellow', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nbbw(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbw(board, ('blue', 'yellow', 'red', 'yellow'), 0, 4)",
                                "function": "def nbbw(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nbbw(board, ('blue', 'yellow', 'red', 'yellow'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 5th column. place a yellow bridge horizontally in the 1st row, 6th column. place a red bridge horizontally in the 1st row, 5th column. place a yellow washer in the 1st row, 5th column. This is nbbw.",
                                        "<Editor>": {
                                            "total_code": "def nbbw(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbw(board, ('blue', 'yellow', 'red', 'yellow'), 0, 4)",
                                            "function": "def nbbw(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nbbw(board, ('blue', 'yellow', 'red', 'yellow'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nbbw",
                        "shapes": [
                            "nut",
                            "bridge-v",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "blue",
                            "red"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            null,
                            "vertical",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'green', 0, 6)\nput(board, 'bridge-v', 'green', 1, 6)\nput(board, 'bridge-v', 'blue', 0, 6)\nput(board, 'washer', 'red', 0, 6)",
                                "output": [
                                    "put(board, 'nut', 'green', 0, 6)",
                                    "put(board, 'bridge-v', 'green', 1, 6)",
                                    "put(board, 'bridge-v', 'blue', 0, 6)",
                                    "put(board, 'washer', 'red', 0, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nbbw(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbw(board, ('green', 'green', 'blue', 'red'), 0, 6)",
                                "function": "def nbbw(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nbbw(board, ('green', 'green', 'blue', 'red'), 0, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 1st row, 7th column. place a green bridge vertically in the 2nd row, 7th column. place a blue bridge vertically in the 1st row, 7th column. place a red washer in the 1st row, 7th column. This is nbbw.",
                                        "<Editor>": {
                                            "total_code": "def nbbw(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbw(board, ('green', 'green', 'blue', 'red'), 0, 6)",
                                            "function": "def nbbw(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nbbw(board, ('green', 'green', 'blue', 'red'), 0, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'green', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'red', 0, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nbbn": [
                    {
                        "combo_name": "nbbn",
                        "shapes": [
                            "nut",
                            "bridge-h",
                            "bridge-h",
                            "nut"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "red",
                            "green"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            5
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 3, 4)\nput(board, 'bridge-h', 'yellow', 3, 5)\nput(board, 'bridge-h', 'red', 3, 4)\nput(board, 'nut', 'green', 3, 5)",
                                "output": [
                                    "put(board, 'nut', 'blue', 3, 4)",
                                    "put(board, 'bridge-h', 'yellow', 3, 5)",
                                    "put(board, 'bridge-h', 'red', 3, 4)",
                                    "put(board, 'nut', 'green', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nbbn(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbn(board, ('blue', 'yellow', 'red', 'green'), 3, 4)",
                                "function": "def nbbn(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nbbn(board, ('blue', 'yellow', 'red', 'green'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column. place a yellow bridge horizontally in the 4th row, 6th column. place a red bridge horizontally in the 4th row, 5th column. place a green nut in the 4th row, 6th column. This is nbbn.",
                                        "<Editor>": {
                                            "total_code": "def nbbn(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbn(board, ('blue', 'yellow', 'red', 'green'), 3, 4)",
                                            "function": "def nbbn(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nbbn(board, ('blue', 'yellow', 'red', 'green'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 3, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nbbn",
                        "shapes": [
                            "nut",
                            "bridge-h",
                            "bridge-v",
                            "nut"
                        ],
                        "colors": [
                            "blue",
                            "blue",
                            "green",
                            "red"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            1
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 0, 6)\nput(board, 'bridge-h', 'blue', 1, 6)\nput(board, 'bridge-v', 'green', 0, 6)\nput(board, 'nut', 'red', 1, 6)",
                                "output": [
                                    "put(board, 'nut', 'blue', 0, 6)",
                                    "put(board, 'bridge-h', 'blue', 1, 6)",
                                    "put(board, 'bridge-v', 'green', 0, 6)",
                                    "put(board, 'nut', 'red', 1, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nbbn(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbn(board, ('blue', 'blue', 'green', 'red'), 0, 6)",
                                "function": "def nbbn(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nbbn(board, ('blue', 'blue', 'green', 'red'), 0, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 7th column. place a blue bridge horizontally in the 2nd row, 7th column. place a green bridge vertically in the 1st row, 7th column. place a red nut in the 2nd row, 7th column. This is nbbn.",
                                        "<Editor>": {
                                            "total_code": "def nbbn(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbn(board, ('blue', 'blue', 'green', 'red'), 0, 6)",
                                            "function": "def nbbn(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nbbn(board, ('blue', 'blue', 'green', 'red'), 0, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'red', 1, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nbbs": [
                    {
                        "combo_name": "nbbs",
                        "shapes": [
                            "nut",
                            "bridge-v",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "blue",
                            "red",
                            "green"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            6,
                            7,
                            6,
                            7
                        ],
                        "orientations": [
                            null,
                            "vertical",
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 0, 6)\nput(board, 'bridge-v', 'blue', 0, 7)\nput(board, 'bridge-h', 'red', 0, 6)\nput(board, 'screw', 'green', 0, 7)",
                                "output": [
                                    "put(board, 'nut', 'blue', 0, 6)",
                                    "put(board, 'bridge-v', 'blue', 0, 7)",
                                    "put(board, 'bridge-h', 'red', 0, 6)",
                                    "put(board, 'screw', 'green', 0, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nbbs(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbs(board, ('blue', 'blue', 'red', 'green'), 0, 6)",
                                "function": "def nbbs(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nbbs(board, ('blue', 'blue', 'red', 'green'), 0, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 7th column. place a blue bridge vertically in the 1st row, 8th column. place a red bridge horizontally in the 1st row, 7th column. place a green screw in the 1st row, 8th column. This is nbbs.",
                                        "<Editor>": {
                                            "total_code": "def nbbs(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbs(board, ('blue', 'blue', 'red', 'green'), 0, 6)",
                                            "function": "def nbbs(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nbbs(board, ('blue', 'blue', 'red', 'green'), 0, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'screw', 'green', 0, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nbbs",
                        "shapes": [
                            "nut",
                            "bridge-v",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "red",
                            "green"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            5
                        ],
                        "orientations": [
                            null,
                            "vertical",
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 3, 4)\nput(board, 'bridge-v', 'yellow', 3, 5)\nput(board, 'bridge-h', 'red', 3, 4)\nput(board, 'screw', 'green', 3, 5)",
                                "output": [
                                    "put(board, 'nut', 'blue', 3, 4)",
                                    "put(board, 'bridge-v', 'yellow', 3, 5)",
                                    "put(board, 'bridge-h', 'red', 3, 4)",
                                    "put(board, 'screw', 'green', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nbbs(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbs(board, ('blue', 'yellow', 'red', 'green'), 3, 4)",
                                "function": "def nbbs(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nbbs(board, ('blue', 'yellow', 'red', 'green'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column. place a yellow bridge vertically in the 4th row, 6th column. place a red bridge horizontally in the 4th row, 5th column. place a green screw in the 4th row, 6th column. This is nbbs.",
                                        "<Editor>": {
                                            "total_code": "def nbbs(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbs(board, ('blue', 'yellow', 'red', 'green'), 3, 4)",
                                            "function": "def nbbs(board, colors, x, y):\n    shapes = ['nut', 'bridge-v', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nbbs(board, ('blue', 'yellow', 'red', 'green'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'green', 3, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bwns": [
                    {
                        "combo_name": "bwns",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "blue",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'red', 0, 4)\nput(board, 'washer', 'blue', 0, 4)\nput(board, 'nut', 'red', 0, 4)\nput(board, 'screw', 'yellow', 0, 4)",
                                "output": [
                                    "put(board, 'bridge-v', 'red', 0, 4)",
                                    "put(board, 'washer', 'blue', 0, 4)",
                                    "put(board, 'nut', 'red', 0, 4)",
                                    "put(board, 'screw', 'yellow', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwns(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbwns(board, ('red', 'blue', 'red', 'yellow'), 0, 4)",
                                "function": "def bwns(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "bwns(board, ('red', 'blue', 'red', 'yellow'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 5th column. place a blue washer in the 1st row, 5th column. place a red nut in the 1st row, 5th column. place a yellow screw in the 1st row, 5th column. This is bwns.",
                                        "<Editor>": {
                                            "total_code": "def bwns(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbwns(board, ('red', 'blue', 'red', 'yellow'), 0, 4)",
                                            "function": "def bwns(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "bwns(board, ('red', 'blue', 'red', 'yellow'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'red', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 0, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwns",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "blue",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'yellow', 0, 5)\nput(board, 'washer', 'blue', 0, 5)\nput(board, 'nut', 'yellow', 0, 5)\nput(board, 'screw', 'blue', 0, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'yellow', 0, 5)",
                                    "put(board, 'washer', 'blue', 0, 5)",
                                    "put(board, 'nut', 'yellow', 0, 5)",
                                    "put(board, 'screw', 'blue', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwns(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbwns(board, ('yellow', 'blue', 'yellow', 'blue'), 0, 5)",
                                "function": "def bwns(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "bwns(board, ('yellow', 'blue', 'yellow', 'blue'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 1st row, 6th column. place a blue washer in the 1st row, 6th column. place a yellow nut in the 1st row, 6th column. place a blue screw in the 1st row, 6th column. This is bwns.",
                                        "<Editor>": {
                                            "total_code": "def bwns(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbwns(board, ('yellow', 'blue', 'yellow', 'blue'), 0, 5)",
                                            "function": "def bwns(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'nut', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "bwns(board, ('yellow', 'blue', 'yellow', 'blue'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 0, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bwbw": [
                    {
                        "combo_name": "bwbw",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "bridge-h",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "blue",
                            "green",
                            "red"
                        ],
                        "x": [
                            1,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            5
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'yellow', 1, 5)\nput(board, 'washer', 'blue', 2, 6)\nput(board, 'bridge-h', 'green', 2, 5)\nput(board, 'washer', 'red', 2, 5)",
                                "output": [
                                    "put(board, 'bridge-v', 'yellow', 1, 5)",
                                    "put(board, 'washer', 'blue', 2, 6)",
                                    "put(board, 'bridge-h', 'green', 2, 5)",
                                    "put(board, 'washer', 'red', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbw(board, ('yellow', 'blue', 'green', 'red'), 1, 5)",
                                "function": "def bwbw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbw(board, ('yellow', 'blue', 'green', 'red'), 1, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed7_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed7.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 6th column. place a blue washer in the 3rd row, 7th column. place a green bridge horizontally in the 3rd row, 6th column. place a red washer in the 3rd row, 6th column. This is bwbw.",
                                        "<Editor>": {
                                            "total_code": "def bwbw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbw(board, ('yellow', 'blue', 'green', 'red'), 1, 5)",
                                            "function": "def bwbw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbw(board, ('yellow', 'blue', 'green', 'red'), 1, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'red', 2, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwbw",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "blue",
                            "yellow"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 2, 4)\nput(board, 'washer', 'green', 3, 5)\nput(board, 'bridge-v', 'blue', 2, 5)\nput(board, 'washer', 'yellow', 2, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 2, 4)",
                                    "put(board, 'washer', 'green', 3, 5)",
                                    "put(board, 'bridge-v', 'blue', 2, 5)",
                                    "put(board, 'washer', 'yellow', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbw(board, ('green', 'green', 'blue', 'yellow'), 2, 4)",
                                "function": "def bwbw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbw(board, ('green', 'green', 'blue', 'yellow'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed6_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed6.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 5th column. place a green washer in the 4th row, 6th column. place a blue bridge vertically in the 3rd row, 6th column. place a yellow washer in the 3rd row, 6th column. This is bwbw.",
                                        "<Editor>": {
                                            "total_code": "def bwbw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbw(board, ('green', 'green', 'blue', 'yellow'), 2, 4)",
                                            "function": "def bwbw(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbw(board, ('green', 'green', 'blue', 'yellow'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bwbn": [
                    {
                        "combo_name": "bwbn",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "bridge-h",
                            "nut"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            5
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'green', 3, 5)\nput(board, 'washer', 'green', 3, 6)\nput(board, 'bridge-h', 'yellow', 3, 5)\nput(board, 'nut', 'blue', 3, 5)",
                                "output": [
                                    "put(board, 'bridge-v', 'green', 3, 5)",
                                    "put(board, 'washer', 'green', 3, 6)",
                                    "put(board, 'bridge-h', 'yellow', 3, 5)",
                                    "put(board, 'nut', 'blue', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbn(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbn(board, ('green', 'green', 'yellow', 'blue'), 3, 5)",
                                "function": "def bwbn(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbn(board, ('green', 'green', 'yellow', 'blue'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 6th column. place a green washer in the 4th row, 7th column. place a yellow bridge horizontally in the 4th row, 6th column. place a blue nut in the 4th row, 6th column. This is bwbn.",
                                        "<Editor>": {
                                            "total_code": "def bwbn(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbn(board, ('green', 'green', 'yellow', 'blue'), 3, 5)",
                                            "function": "def bwbn(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbn(board, ('green', 'green', 'yellow', 'blue'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwbn",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "bridge-v",
                            "nut"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "blue",
                            "green"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3
                        ],
                        "y": [
                            6,
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 3, 6)\nput(board, 'washer', 'yellow', 4, 7)\nput(board, 'bridge-v', 'blue', 3, 7)\nput(board, 'nut', 'green', 3, 7)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 3, 6)",
                                    "put(board, 'washer', 'yellow', 4, 7)",
                                    "put(board, 'bridge-v', 'blue', 3, 7)",
                                    "put(board, 'nut', 'green', 3, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbn(board, ('green', 'yellow', 'blue', 'green'), 3, 6)",
                                "function": "def bwbn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbn(board, ('green', 'yellow', 'blue', 'green'), 3, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed6_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed6.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 4th row, 7th column. place a yellow washer in the 5th row, 8th column. place a blue bridge vertically in the 4th row, 8th column. place a green nut in the 4th row, 8th column. This is bwbn.",
                                        "<Editor>": {
                                            "total_code": "def bwbn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbn(board, ('green', 'yellow', 'blue', 'green'), 3, 6)",
                                            "function": "def bwbn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbn(board, ('green', 'yellow', 'blue', 'green'), 3, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 5th row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 4, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'green', 3, 7)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bwbs": [
                    {
                        "combo_name": "bwbs",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "green",
                            "blue"
                        ],
                        "x": [
                            2,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            6,
                            7,
                            6,
                            6
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'yellow', 2, 6)\nput(board, 'washer', 'yellow', 3, 7)\nput(board, 'bridge-h', 'green', 3, 6)\nput(board, 'screw', 'blue', 3, 6)",
                                "output": [
                                    "put(board, 'bridge-v', 'yellow', 2, 6)",
                                    "put(board, 'washer', 'yellow', 3, 7)",
                                    "put(board, 'bridge-h', 'green', 3, 6)",
                                    "put(board, 'screw', 'blue', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbs(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbs(board, ('yellow', 'yellow', 'green', 'blue'), 2, 6)",
                                "function": "def bwbs(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbs(board, ('yellow', 'yellow', 'green', 'blue'), 2, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed7_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed7.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 3rd row, 7th column. place a yellow washer in the 4th row, 8th column. place a green bridge horizontally in the 4th row, 7th column. place a blue screw in the 4th row, 7th column. This is bwbs.",
                                        "<Editor>": {
                                            "total_code": "def bwbs(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbs(board, ('yellow', 'yellow', 'green', 'blue'), 2, 6)",
                                            "function": "def bwbs(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbs(board, ('yellow', 'yellow', 'green', 'blue'), 2, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 3, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwbs",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "green",
                            "blue",
                            "red"
                        ],
                        "x": [
                            1,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            5
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'yellow', 1, 5)\nput(board, 'washer', 'green', 1, 6)\nput(board, 'bridge-h', 'blue', 1, 5)\nput(board, 'screw', 'red', 1, 5)",
                                "output": [
                                    "put(board, 'bridge-v', 'yellow', 1, 5)",
                                    "put(board, 'washer', 'green', 1, 6)",
                                    "put(board, 'bridge-h', 'blue', 1, 5)",
                                    "put(board, 'screw', 'red', 1, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbs(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbs(board, ('yellow', 'green', 'blue', 'red'), 1, 5)",
                                "function": "def bwbs(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbs(board, ('yellow', 'green', 'blue', 'red'), 1, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 6th column. place a green washer in the 2nd row, 7th column. place a blue bridge horizontally in the 2nd row, 6th column. place a red screw in the 2nd row, 6th column. This is bwbs.",
                                        "<Editor>": {
                                            "total_code": "def bwbs(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbs(board, ('yellow', 'green', 'blue', 'red'), 1, 5)",
                                            "function": "def bwbs(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbs(board, ('yellow', 'green', 'blue', 'red'), 1, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'red', 1, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnws": [
                    {
                        "combo_name": "bnws",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "red",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            1,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 1, 6)\nput(board, 'nut', 'red', 1, 6)\nput(board, 'washer', 'yellow', 1, 6)\nput(board, 'screw', 'green', 1, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 1, 6)",
                                    "put(board, 'nut', 'red', 1, 6)",
                                    "put(board, 'washer', 'yellow', 1, 6)",
                                    "put(board, 'screw', 'green', 1, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbnws(board, ('green', 'red', 'yellow', 'green'), 1, 6)",
                                "function": "def bnws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "bnws(board, ('green', 'red', 'yellow', 'green'), 1, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 7th column. place a red nut in the 2nd row, 7th column. place a yellow washer in the 2nd row, 7th column. place a green screw in the 2nd row, 7th column. This is bnws.",
                                        "<Editor>": {
                                            "total_code": "def bnws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbnws(board, ('green', 'red', 'yellow', 'green'), 1, 6)",
                                            "function": "def bnws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "bnws(board, ('green', 'red', 'yellow', 'green'), 1, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'red', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'green', 1, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnws",
                        "shapes": [
                            "bridge-v",
                            "nut",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "green",
                            "red"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'green', 3, 6)\nput(board, 'nut', 'yellow', 3, 6)\nput(board, 'washer', 'green', 3, 6)\nput(board, 'screw', 'red', 3, 6)",
                                "output": [
                                    "put(board, 'bridge-v', 'green', 3, 6)",
                                    "put(board, 'nut', 'yellow', 3, 6)",
                                    "put(board, 'washer', 'green', 3, 6)",
                                    "put(board, 'screw', 'red', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnws(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbnws(board, ('green', 'yellow', 'green', 'red'), 3, 6)",
                                "function": "def bnws(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                "usage": "bnws(board, ('green', 'yellow', 'green', 'red'), 3, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 7th column. place a yellow nut in the 4th row, 7th column. place a green washer in the 4th row, 7th column. place a red screw in the 4th row, 7th column. This is bnws.",
                                        "<Editor>": {
                                            "total_code": "def bnws(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)\nboard = init_board(8, 8)\nbnws(board, ('green', 'yellow', 'green', 'red'), 3, 6)",
                                            "function": "def bnws(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'washer', 'screw']\n    for shape, color in zip(shapes, colors):\n            put(board, shape, color, x, y)",
                                            "usage": "bnws(board, ('green', 'yellow', 'green', 'red'), 3, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'red', 3, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnbw": [
                    {
                        "combo_name": "bnbw",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "red",
                            "green"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            1
                        ],
                        "y": [
                            6,
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 1, 6)\nput(board, 'nut', 'yellow', 2, 7)\nput(board, 'bridge-v', 'red', 1, 7)\nput(board, 'washer', 'green', 1, 7)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 1, 6)",
                                    "put(board, 'nut', 'yellow', 2, 7)",
                                    "put(board, 'bridge-v', 'red', 1, 7)",
                                    "put(board, 'washer', 'green', 1, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbw(board, ('green', 'yellow', 'red', 'green'), 1, 6)",
                                "function": "def bnbw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbw(board, ('green', 'yellow', 'red', 'green'), 1, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed6_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed6.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 7th column. place a yellow nut in the 3rd row, 8th column. place a red bridge vertically in the 2nd row, 8th column. place a green washer in the 2nd row, 8th column. This is bnbw.",
                                        "<Editor>": {
                                            "total_code": "def bnbw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbw(board, ('green', 'yellow', 'red', 'green'), 1, 6)",
                                            "function": "def bnbw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbw(board, ('green', 'yellow', 'red', 'green'), 1, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnbw",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "blue",
                            "green",
                            "blue"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            3
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'yellow', 2, 4)\nput(board, 'nut', 'blue', 3, 4)\nput(board, 'bridge-v', 'green', 2, 4)\nput(board, 'washer', 'blue', 3, 4)",
                                "output": [
                                    "put(board, 'bridge-h', 'yellow', 2, 4)",
                                    "put(board, 'nut', 'blue', 3, 4)",
                                    "put(board, 'bridge-v', 'green', 2, 4)",
                                    "put(board, 'washer', 'blue', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbw(board, ('yellow', 'blue', 'green', 'blue'), 2, 4)",
                                "function": "def bnbw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbw(board, ('yellow', 'blue', 'green', 'blue'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 3rd row, 5th column. place a blue nut in the 4th row, 5th column. place a green bridge vertically in the 3rd row, 5th column. place a blue washer in the 4th row, 5th column. This is bnbw.",
                                        "<Editor>": {
                                            "total_code": "def bnbw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbw(board, ('yellow', 'blue', 'green', 'blue'), 2, 4)",
                                            "function": "def bnbw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbw(board, ('yellow', 'blue', 'green', 'blue'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 3, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnbn": [
                    {
                        "combo_name": "bnbn",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "nut"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "red",
                            "green"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 2, 4)\nput(board, 'nut', 'green', 3, 4)\nput(board, 'bridge-v', 'red', 2, 4)\nput(board, 'nut', 'green', 2, 4)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 2, 4)",
                                    "put(board, 'nut', 'green', 3, 4)",
                                    "put(board, 'bridge-v', 'red', 2, 4)",
                                    "put(board, 'nut', 'green', 2, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbn(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbn(board, ('green', 'green', 'red', 'green'), 2, 4)",
                                "function": "def bnbn(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbn(board, ('green', 'green', 'red', 'green'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 5th column. place a green nut in the 4th row, 5th column. place a red bridge vertically in the 3rd row, 5th column. place a green nut in the 3rd row, 5th column. This is bnbn.",
                                        "<Editor>": {
                                            "total_code": "def bnbn(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbn(board, ('green', 'green', 'red', 'green'), 2, 4)",
                                            "function": "def bnbn(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbn(board, ('green', 'green', 'red', 'green'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnbn",
                        "shapes": [
                            "bridge-v",
                            "nut",
                            "bridge-h",
                            "nut"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            1,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            6,
                            7,
                            6,
                            6
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'red', 1, 6)\nput(board, 'nut', 'green', 2, 7)\nput(board, 'bridge-h', 'yellow', 2, 6)\nput(board, 'nut', 'blue', 2, 6)",
                                "output": [
                                    "put(board, 'bridge-v', 'red', 1, 6)",
                                    "put(board, 'nut', 'green', 2, 7)",
                                    "put(board, 'bridge-h', 'yellow', 2, 6)",
                                    "put(board, 'nut', 'blue', 2, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbn(board, ('red', 'green', 'yellow', 'blue'), 1, 6)",
                                "function": "def bnbn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbn(board, ('red', 'green', 'yellow', 'blue'), 1, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed7_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed7.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 7th column. place a green nut in the 3rd row, 8th column. place a yellow bridge horizontally in the 3rd row, 7th column. place a blue nut in the 3rd row, 7th column. This is bnbn.",
                                        "<Editor>": {
                                            "total_code": "def bnbn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbn(board, ('red', 'green', 'yellow', 'blue'), 1, 6)",
                                            "function": "def bnbn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 1, 1], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbn(board, ('red', 'green', 'yellow', 'blue'), 1, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 2, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnbs": [
                    {
                        "combo_name": "bnbs",
                        "shapes": [
                            "bridge-v",
                            "nut",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "red",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            6
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'green', 3, 5)\nput(board, 'nut', 'red', 3, 6)\nput(board, 'bridge-h', 'yellow', 3, 5)\nput(board, 'screw', 'blue', 3, 6)",
                                "output": [
                                    "put(board, 'bridge-v', 'green', 3, 5)",
                                    "put(board, 'nut', 'red', 3, 6)",
                                    "put(board, 'bridge-h', 'yellow', 3, 5)",
                                    "put(board, 'screw', 'blue', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbs(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbs(board, ('green', 'red', 'yellow', 'blue'), 3, 5)",
                                "function": "def bnbs(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbs(board, ('green', 'red', 'yellow', 'blue'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 6th column. place a red nut in the 4th row, 7th column. place a yellow bridge horizontally in the 4th row, 6th column. place a blue screw in the 4th row, 7th column. This is bnbs.",
                                        "<Editor>": {
                                            "total_code": "def bnbs(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbs(board, ('green', 'red', 'yellow', 'blue'), 3, 5)",
                                            "function": "def bnbs(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbs(board, ('green', 'red', 'yellow', 'blue'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'red', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 3, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnbs",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "green",
                            "red"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'blue', 2, 4)\nput(board, 'nut', 'yellow', 3, 5)\nput(board, 'bridge-v', 'green', 2, 5)\nput(board, 'screw', 'red', 2, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'blue', 2, 4)",
                                    "put(board, 'nut', 'yellow', 3, 5)",
                                    "put(board, 'bridge-v', 'green', 2, 5)",
                                    "put(board, 'screw', 'red', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbs(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbs(board, ('blue', 'yellow', 'green', 'red'), 2, 4)",
                                "function": "def bnbs(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbs(board, ('blue', 'yellow', 'green', 'red'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed6_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed6.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 3rd row, 5th column. place a yellow nut in the 4th row, 6th column. place a green bridge vertically in the 3rd row, 6th column. place a red screw in the 3rd row, 6th column. This is bnbs.",
                                        "<Editor>": {
                                            "total_code": "def bnbs(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbs(board, ('blue', 'yellow', 'green', 'red'), 2, 4)",
                                            "function": "def bnbs(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbs(board, ('blue', 'yellow', 'green', 'red'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'red', 2, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bbbw": [
                    {
                        "combo_name": "bbbw",
                        "shapes": [
                            "bridge-h",
                            "bridge-v",
                            "bridge-v",
                            "washer"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            "vertical",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'red', 3, 6)\nput(board, 'bridge-v', 'green', 4, 6)\nput(board, 'bridge-v', 'yellow', 3, 6)\nput(board, 'washer', 'green', 3, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'red', 3, 6)",
                                    "put(board, 'bridge-v', 'green', 4, 6)",
                                    "put(board, 'bridge-v', 'yellow', 3, 6)",
                                    "put(board, 'washer', 'green', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbw(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbw(board, ('red', 'green', 'yellow', 'green'), 3, 6)",
                                "function": "def bbbw(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbw(board, ('red', 'green', 'yellow', 'green'), 3, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed4_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed4.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 7th column. place a green bridge vertically in the 5th row, 7th column. place a yellow bridge vertically in the 4th row, 7th column. place a green washer in the 4th row, 7th column. This is bbbw.",
                                        "<Editor>": {
                                            "total_code": "def bbbw(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbw(board, ('red', 'green', 'yellow', 'green'), 3, 6)",
                                            "function": "def bbbw(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbw(board, ('red', 'green', 'yellow', 'green'), 3, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 5th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 4, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bbbw",
                        "shapes": [
                            "bridge-v",
                            "bridge-v",
                            "bridge-h",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "green",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            5
                        ],
                        "orientations": [
                            "vertical",
                            "vertical",
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'yellow', 0, 5)\nput(board, 'bridge-v', 'green', 0, 6)\nput(board, 'bridge-h', 'red', 0, 5)\nput(board, 'washer', 'yellow', 0, 5)",
                                "output": [
                                    "put(board, 'bridge-v', 'yellow', 0, 5)",
                                    "put(board, 'bridge-v', 'green', 0, 6)",
                                    "put(board, 'bridge-h', 'red', 0, 5)",
                                    "put(board, 'washer', 'yellow', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbw(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-v', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbw(board, ('yellow', 'green', 'red', 'yellow'), 0, 5)",
                                "function": "def bbbw(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-v', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbw(board, ('yellow', 'green', 'red', 'yellow'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 1st row, 6th column. place a green bridge vertically in the 1st row, 7th column. place a red bridge horizontally in the 1st row, 6th column. place a yellow washer in the 1st row, 6th column. This is bbbw.",
                                        "<Editor>": {
                                            "total_code": "def bbbw(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-v', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbw(board, ('yellow', 'green', 'red', 'yellow'), 0, 5)",
                                            "function": "def bbbw(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-v', 'bridge-h', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbw(board, ('yellow', 'green', 'red', 'yellow'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bbbn": [
                    {
                        "combo_name": "bbbn",
                        "shapes": [
                            "bridge-h",
                            "bridge-v",
                            "bridge-v",
                            "nut"
                        ],
                        "colors": [
                            "blue",
                            "green",
                            "red",
                            "blue"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            2
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            "vertical",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'blue', 1, 5)\nput(board, 'bridge-v', 'green', 2, 5)\nput(board, 'bridge-v', 'red', 1, 5)\nput(board, 'nut', 'blue', 2, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'blue', 1, 5)",
                                    "put(board, 'bridge-v', 'green', 2, 5)",
                                    "put(board, 'bridge-v', 'red', 1, 5)",
                                    "put(board, 'nut', 'blue', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbn(board, ('blue', 'green', 'red', 'blue'), 1, 5)",
                                "function": "def bbbn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbn(board, ('blue', 'green', 'red', 'blue'), 1, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed5_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed5.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 2nd row, 6th column. place a green bridge vertically in the 3rd row, 6th column. place a red bridge vertically in the 2nd row, 6th column. place a blue nut in the 3rd row, 6th column. This is bbbn.",
                                        "<Editor>": {
                                            "total_code": "def bbbn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbn(board, ('blue', 'green', 'red', 'blue'), 1, 5)",
                                            "function": "def bbbn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 1], [0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbn(board, ('blue', 'green', 'red', 'blue'), 1, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 2, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bbbn",
                        "shapes": [
                            "bridge-h",
                            "bridge-h",
                            "bridge-v",
                            "nut"
                        ],
                        "colors": [
                            "blue",
                            "blue",
                            "yellow",
                            "red"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            "horizontal",
                            "vertical",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'blue', 0, 4)\nput(board, 'bridge-h', 'blue', 1, 5)\nput(board, 'bridge-v', 'yellow', 0, 5)\nput(board, 'nut', 'red', 0, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'blue', 0, 4)",
                                    "put(board, 'bridge-h', 'blue', 1, 5)",
                                    "put(board, 'bridge-v', 'yellow', 0, 5)",
                                    "put(board, 'nut', 'red', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbn(board, ('blue', 'blue', 'yellow', 'red'), 0, 4)",
                                "function": "def bbbn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbn(board, ('blue', 'blue', 'yellow', 'red'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed6_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed6.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 1st row, 5th column. place a blue bridge horizontally in the 2nd row, 6th column. place a yellow bridge vertically in the 1st row, 6th column. place a red nut in the 1st row, 6th column. This is bbbn.",
                                        "<Editor>": {
                                            "total_code": "def bbbn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbn(board, ('blue', 'blue', 'yellow', 'red'), 0, 4)",
                                            "function": "def bbbn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0], [0, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbn(board, ('blue', 'blue', 'yellow', 'red'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'red', 0, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bbbs": [
                    {
                        "combo_name": "bbbs",
                        "shapes": [
                            "bridge-v",
                            "bridge-h",
                            "bridge-h",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "green",
                            "red"
                        ],
                        "x": [
                            1,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            5
                        ],
                        "orientations": [
                            "vertical",
                            "horizontal",
                            "horizontal",
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'red', 1, 4)\nput(board, 'bridge-h', 'yellow', 1, 5)\nput(board, 'bridge-h', 'green', 1, 4)\nput(board, 'screw', 'red', 1, 5)",
                                "output": [
                                    "put(board, 'bridge-v', 'red', 1, 4)",
                                    "put(board, 'bridge-h', 'yellow', 1, 5)",
                                    "put(board, 'bridge-h', 'green', 1, 4)",
                                    "put(board, 'screw', 'red', 1, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbs(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbs(board, ('red', 'yellow', 'green', 'red'), 1, 4)",
                                "function": "def bbbs(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbs(board, ('red', 'yellow', 'green', 'red'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fourshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fourshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 5th column. place a yellow bridge horizontally in the 2nd row, 6th column. place a green bridge horizontally in the 2nd row, 5th column. place a red screw in the 2nd row, 6th column. This is bbbs.",
                                        "<Editor>": {
                                            "total_code": "def bbbs(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbs(board, ('red', 'yellow', 'green', 'red'), 1, 4)",
                                            "function": "def bbbs(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0], [0, 1, 0, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbs(board, ('red', 'yellow', 'green', 'red'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'red', 1, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "5": {
                "bwbwn": [
                    {
                        "combo_name": "bwbwn",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "bridge-v",
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "blue",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 0, 5)\nput(board, 'washer', 'green', 1, 5)\nput(board, 'bridge-v', 'blue', 0, 5)\nput(board, 'washer', 'yellow', 0, 5)\nput(board, 'nut', 'green', 0, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 0, 5)",
                                    "put(board, 'washer', 'green', 1, 5)",
                                    "put(board, 'bridge-v', 'blue', 0, 5)",
                                    "put(board, 'washer', 'yellow', 0, 5)",
                                    "put(board, 'nut', 'green', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbwn(board, ('green', 'green', 'blue', 'yellow', 'green'), 0, 5)",
                                "function": "def bwbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbwn(board, ('green', 'green', 'blue', 'yellow', 'green'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 1st row, 6th column. place a green washer in the 2nd row, 6th column. place a blue bridge vertically in the 1st row, 6th column. place a yellow washer in the 1st row, 6th column. place a green nut in the 1st row, 6th column. This is bwbwn.",
                                        "<Editor>": {
                                            "total_code": "def bwbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbwn(board, ('green', 'green', 'blue', 'yellow', 'green'), 0, 5)",
                                            "function": "def bwbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbwn(board, ('green', 'green', 'blue', 'yellow', 'green'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 0, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwbwn",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "bridge-v",
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "red",
                            "blue",
                            "green"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 1, 4)\nput(board, 'washer', 'yellow', 2, 4)\nput(board, 'bridge-v', 'red', 1, 4)\nput(board, 'washer', 'blue', 1, 4)\nput(board, 'nut', 'green', 1, 4)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 1, 4)",
                                    "put(board, 'washer', 'yellow', 2, 4)",
                                    "put(board, 'bridge-v', 'red', 1, 4)",
                                    "put(board, 'washer', 'blue', 1, 4)",
                                    "put(board, 'nut', 'green', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbwn(board, ('green', 'yellow', 'red', 'blue', 'green'), 1, 4)",
                                "function": "def bwbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbwn(board, ('green', 'yellow', 'red', 'blue', 'green'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 5th column. place a yellow washer in the 3rd row, 5th column. place a red bridge vertically in the 2nd row, 5th column. place a blue washer in the 2nd row, 5th column. place a green nut in the 2nd row, 5th column. This is bwbwn.",
                                        "<Editor>": {
                                            "total_code": "def bwbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbwn(board, ('green', 'yellow', 'red', 'blue', 'green'), 1, 4)",
                                            "function": "def bwbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbwn(board, ('green', 'yellow', 'red', 'blue', 'green'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 1, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bwbws": [
                    {
                        "combo_name": "bwbws",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "blue",
                            "red",
                            "green",
                            "red"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 1, 5)\nput(board, 'washer', 'blue', 2, 5)\nput(board, 'bridge-v', 'red', 1, 5)\nput(board, 'washer', 'green', 1, 5)\nput(board, 'screw', 'red', 1, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 1, 5)",
                                    "put(board, 'washer', 'blue', 2, 5)",
                                    "put(board, 'bridge-v', 'red', 1, 5)",
                                    "put(board, 'washer', 'green', 1, 5)",
                                    "put(board, 'screw', 'red', 1, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbws(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbws(board, ('green', 'blue', 'red', 'green', 'red'), 1, 5)",
                                "function": "def bwbws(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbws(board, ('green', 'blue', 'red', 'green', 'red'), 1, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 6th column. place a blue washer in the 3rd row, 6th column. place a red bridge vertically in the 2nd row, 6th column. place a green washer in the 2nd row, 6th column. place a red screw in the 2nd row, 6th column. This is bwbws.",
                                        "<Editor>": {
                                            "total_code": "def bwbws(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbws(board, ('green', 'blue', 'red', 'green', 'red'), 1, 5)",
                                            "function": "def bwbws(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbws(board, ('green', 'blue', 'red', 'green', 'red'), 1, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'red', 1, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwbws",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "green",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'blue', 3, 5)\nput(board, 'washer', 'yellow', 4, 5)\nput(board, 'bridge-v', 'green', 3, 5)\nput(board, 'washer', 'yellow', 3, 5)\nput(board, 'screw', 'blue', 3, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'blue', 3, 5)",
                                    "put(board, 'washer', 'yellow', 4, 5)",
                                    "put(board, 'bridge-v', 'green', 3, 5)",
                                    "put(board, 'washer', 'yellow', 3, 5)",
                                    "put(board, 'screw', 'blue', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbws(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbws(board, ('blue', 'yellow', 'green', 'yellow', 'blue'), 3, 5)",
                                "function": "def bwbws(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbws(board, ('blue', 'yellow', 'green', 'yellow', 'blue'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 4th row, 6th column. place a yellow washer in the 5th row, 6th column. place a green bridge vertically in the 4th row, 6th column. place a yellow washer in the 4th row, 6th column. place a blue screw in the 4th row, 6th column. This is bwbws.",
                                        "<Editor>": {
                                            "total_code": "def bwbws(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbws(board, ('blue', 'yellow', 'green', 'yellow', 'blue'), 3, 5)",
                                            "function": "def bwbws(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbws(board, ('blue', 'yellow', 'green', 'yellow', 'blue'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 5th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 4, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 3, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bwbnw": [
                    {
                        "combo_name": "bwbnw",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "bridge-h",
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "red",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'green', 0, 5)\nput(board, 'washer', 'yellow', 0, 6)\nput(board, 'bridge-h', 'red', 0, 5)\nput(board, 'nut', 'yellow', 0, 5)\nput(board, 'washer', 'blue', 0, 5)",
                                "output": [
                                    "put(board, 'bridge-v', 'green', 0, 5)",
                                    "put(board, 'washer', 'yellow', 0, 6)",
                                    "put(board, 'bridge-h', 'red', 0, 5)",
                                    "put(board, 'nut', 'yellow', 0, 5)",
                                    "put(board, 'washer', 'blue', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbnw(board, ('green', 'yellow', 'red', 'yellow', 'blue'), 0, 5)",
                                "function": "def bwbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbnw(board, ('green', 'yellow', 'red', 'yellow', 'blue'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 1st row, 6th column. place a yellow washer in the 1st row, 7th column. place a red bridge horizontally in the 1st row, 6th column. place a yellow nut in the 1st row, 6th column. place a blue washer in the 1st row, 6th column. This is bwbnw.",
                                        "<Editor>": {
                                            "total_code": "def bwbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbnw(board, ('green', 'yellow', 'red', 'yellow', 'blue'), 0, 5)",
                                            "function": "def bwbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbnw(board, ('green', 'yellow', 'red', 'yellow', 'blue'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 0, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwbnw",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "bridge-h",
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "blue",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            2,
                            2,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'yellow', 2, 5)\nput(board, 'washer', 'yellow', 2, 6)\nput(board, 'bridge-h', 'blue', 2, 5)\nput(board, 'nut', 'yellow', 2, 5)\nput(board, 'washer', 'green', 2, 5)",
                                "output": [
                                    "put(board, 'bridge-v', 'yellow', 2, 5)",
                                    "put(board, 'washer', 'yellow', 2, 6)",
                                    "put(board, 'bridge-h', 'blue', 2, 5)",
                                    "put(board, 'nut', 'yellow', 2, 5)",
                                    "put(board, 'washer', 'green', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbnw(board, ('yellow', 'yellow', 'blue', 'yellow', 'green'), 2, 5)",
                                "function": "def bwbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbnw(board, ('yellow', 'yellow', 'blue', 'yellow', 'green'), 2, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 3rd row, 6th column. place a yellow washer in the 3rd row, 7th column. place a blue bridge horizontally in the 3rd row, 6th column. place a yellow nut in the 3rd row, 6th column. place a green washer in the 3rd row, 6th column. This is bwbnw.",
                                        "<Editor>": {
                                            "total_code": "def bwbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbnw(board, ('yellow', 'yellow', 'blue', 'yellow', 'green'), 2, 5)",
                                            "function": "def bwbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbnw(board, ('yellow', 'yellow', 'blue', 'yellow', 'green'), 2, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 2, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bwbns": [
                    {
                        "combo_name": "bwbns",
                        "shapes": [
                            "bridge-h",
                            "washer",
                            "bridge-v",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "red",
                            "blue",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 1, 4)\nput(board, 'washer', 'red', 2, 5)\nput(board, 'bridge-v', 'blue', 1, 5)\nput(board, 'nut', 'red', 1, 5)\nput(board, 'screw', 'yellow', 1, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 1, 4)",
                                    "put(board, 'washer', 'red', 2, 5)",
                                    "put(board, 'bridge-v', 'blue', 1, 5)",
                                    "put(board, 'nut', 'red', 1, 5)",
                                    "put(board, 'screw', 'yellow', 1, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbns(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbns(board, ('green', 'red', 'blue', 'red', 'yellow'), 1, 4)",
                                "function": "def bwbns(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbns(board, ('green', 'red', 'blue', 'red', 'yellow'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 5th column. place a red washer in the 3rd row, 6th column. place a blue bridge vertically in the 2nd row, 6th column. place a red nut in the 2nd row, 6th column. place a yellow screw in the 2nd row, 6th column. This is bwbns.",
                                        "<Editor>": {
                                            "total_code": "def bwbns(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbns(board, ('green', 'red', 'blue', 'red', 'yellow'), 1, 4)",
                                            "function": "def bwbns(board, colors, x, y):\n    shapes = ['bridge-h', 'washer', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbns(board, ('green', 'red', 'blue', 'red', 'yellow'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'red', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 1, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bwbns",
                        "shapes": [
                            "bridge-v",
                            "washer",
                            "bridge-h",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "green",
                            "blue",
                            "red"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'red', 0, 4)\nput(board, 'washer', 'yellow', 0, 5)\nput(board, 'bridge-h', 'green', 0, 4)\nput(board, 'nut', 'blue', 0, 4)\nput(board, 'screw', 'red', 0, 4)",
                                "output": [
                                    "put(board, 'bridge-v', 'red', 0, 4)",
                                    "put(board, 'washer', 'yellow', 0, 5)",
                                    "put(board, 'bridge-h', 'green', 0, 4)",
                                    "put(board, 'nut', 'blue', 0, 4)",
                                    "put(board, 'screw', 'red', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bwbns(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbns(board, ('red', 'yellow', 'green', 'blue', 'red'), 0, 4)",
                                "function": "def bwbns(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bwbns(board, ('red', 'yellow', 'green', 'blue', 'red'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 5th column. place a yellow washer in the 1st row, 6th column. place a green bridge horizontally in the 1st row, 5th column. place a blue nut in the 1st row, 5th column. place a red screw in the 1st row, 5th column. This is bwbns.",
                                        "<Editor>": {
                                            "total_code": "def bwbns(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbwbns(board, ('red', 'yellow', 'green', 'blue', 'red'), 0, 4)",
                                            "function": "def bwbns(board, colors, x, y):\n    shapes = ['bridge-v', 'washer', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bwbns(board, ('red', 'yellow', 'green', 'blue', 'red'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'red', 0, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnbwn": [
                    {
                        "combo_name": "bnbwn",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "green",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'yellow', 3, 5)\nput(board, 'nut', 'yellow', 4, 5)\nput(board, 'bridge-v', 'green', 3, 5)\nput(board, 'washer', 'yellow', 3, 5)\nput(board, 'nut', 'green', 3, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'yellow', 3, 5)",
                                    "put(board, 'nut', 'yellow', 4, 5)",
                                    "put(board, 'bridge-v', 'green', 3, 5)",
                                    "put(board, 'washer', 'yellow', 3, 5)",
                                    "put(board, 'nut', 'green', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbwn(board, ('yellow', 'yellow', 'green', 'yellow', 'green'), 3, 5)",
                                "function": "def bnbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbwn(board, ('yellow', 'yellow', 'green', 'yellow', 'green'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 6th column. place a yellow nut in the 5th row, 6th column. place a green bridge vertically in the 4th row, 6th column. place a yellow washer in the 4th row, 6th column. place a green nut in the 4th row, 6th column. This is bnbwn.",
                                        "<Editor>": {
                                            "total_code": "def bnbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbwn(board, ('yellow', 'yellow', 'green', 'yellow', 'green'), 3, 5)",
                                            "function": "def bnbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbwn(board, ('yellow', 'yellow', 'green', 'yellow', 'green'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 5th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 4, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 3, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnbwn",
                        "shapes": [
                            "bridge-v",
                            "nut",
                            "bridge-h",
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "yellow",
                            "blue",
                            "yellow"
                        ],
                        "x": [
                            2,
                            2,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'red', 2, 4)\nput(board, 'nut', 'green', 2, 5)\nput(board, 'bridge-h', 'yellow', 2, 4)\nput(board, 'washer', 'blue', 2, 4)\nput(board, 'nut', 'yellow', 2, 4)",
                                "output": [
                                    "put(board, 'bridge-v', 'red', 2, 4)",
                                    "put(board, 'nut', 'green', 2, 5)",
                                    "put(board, 'bridge-h', 'yellow', 2, 4)",
                                    "put(board, 'washer', 'blue', 2, 4)",
                                    "put(board, 'nut', 'yellow', 2, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbwn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbwn(board, ('red', 'green', 'yellow', 'blue', 'yellow'), 2, 4)",
                                "function": "def bnbwn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbwn(board, ('red', 'green', 'yellow', 'blue', 'yellow'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 3rd row, 5th column. place a green nut in the 3rd row, 6th column. place a yellow bridge horizontally in the 3rd row, 5th column. place a blue washer in the 3rd row, 5th column. place a yellow nut in the 3rd row, 5th column. This is bnbwn.",
                                        "<Editor>": {
                                            "total_code": "def bnbwn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbwn(board, ('red', 'green', 'yellow', 'blue', 'yellow'), 2, 4)",
                                            "function": "def bnbwn(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbwn(board, ('red', 'green', 'yellow', 'blue', 'yellow'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 2, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnbws": [
                    {
                        "combo_name": "bnbws",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "green",
                            "red",
                            "green"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'yellow', 1, 4)\nput(board, 'nut', 'yellow', 2, 4)\nput(board, 'bridge-v', 'green', 1, 4)\nput(board, 'washer', 'red', 1, 4)\nput(board, 'screw', 'green', 1, 4)",
                                "output": [
                                    "put(board, 'bridge-h', 'yellow', 1, 4)",
                                    "put(board, 'nut', 'yellow', 2, 4)",
                                    "put(board, 'bridge-v', 'green', 1, 4)",
                                    "put(board, 'washer', 'red', 1, 4)",
                                    "put(board, 'screw', 'green', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbws(board, ('yellow', 'yellow', 'green', 'red', 'green'), 1, 4)",
                                "function": "def bnbws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbws(board, ('yellow', 'yellow', 'green', 'red', 'green'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 5th column. place a yellow nut in the 3rd row, 5th column. place a green bridge vertically in the 2nd row, 5th column. place a red washer in the 2nd row, 5th column. place a green screw in the 2nd row, 5th column. This is bnbws.",
                                        "<Editor>": {
                                            "total_code": "def bnbws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbws(board, ('yellow', 'yellow', 'green', 'red', 'green'), 1, 4)",
                                            "function": "def bnbws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbws(board, ('yellow', 'yellow', 'green', 'red', 'green'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'red', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'green', 1, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnbws",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "red",
                            "blue",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'red', 3, 4)\nput(board, 'nut', 'red', 4, 5)\nput(board, 'bridge-v', 'blue', 3, 5)\nput(board, 'washer', 'red', 3, 5)\nput(board, 'screw', 'yellow', 3, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'red', 3, 4)",
                                    "put(board, 'nut', 'red', 4, 5)",
                                    "put(board, 'bridge-v', 'blue', 3, 5)",
                                    "put(board, 'washer', 'red', 3, 5)",
                                    "put(board, 'screw', 'yellow', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbws(board, ('red', 'red', 'blue', 'red', 'yellow'), 3, 4)",
                                "function": "def bnbws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbws(board, ('red', 'red', 'blue', 'red', 'yellow'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 5th column. place a red nut in the 5th row, 6th column. place a blue bridge vertically in the 4th row, 6th column. place a red washer in the 4th row, 6th column. place a yellow screw in the 4th row, 6th column. This is bnbws.",
                                        "<Editor>": {
                                            "total_code": "def bnbws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbws(board, ('red', 'red', 'blue', 'red', 'yellow'), 3, 4)",
                                            "function": "def bnbws(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbws(board, ('red', 'red', 'blue', 'red', 'yellow'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 5th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'red', 4, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'red', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 3, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnbnw": [
                    {
                        "combo_name": "bnbnw",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "red",
                            "blue",
                            "green"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'yellow', 1, 6)\nput(board, 'nut', 'yellow', 2, 6)\nput(board, 'bridge-v', 'red', 1, 6)\nput(board, 'nut', 'blue', 1, 6)\nput(board, 'washer', 'green', 1, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'yellow', 1, 6)",
                                    "put(board, 'nut', 'yellow', 2, 6)",
                                    "put(board, 'bridge-v', 'red', 1, 6)",
                                    "put(board, 'nut', 'blue', 1, 6)",
                                    "put(board, 'washer', 'green', 1, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbnw(board, ('yellow', 'yellow', 'red', 'blue', 'green'), 1, 6)",
                                "function": "def bnbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbnw(board, ('yellow', 'yellow', 'red', 'blue', 'green'), 1, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 7th column. place a yellow nut in the 3rd row, 7th column. place a red bridge vertically in the 2nd row, 7th column. place a blue nut in the 2nd row, 7th column. place a green washer in the 2nd row, 7th column. This is bnbnw.",
                                        "<Editor>": {
                                            "total_code": "def bnbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbnw(board, ('yellow', 'yellow', 'red', 'blue', 'green'), 1, 6)",
                                            "function": "def bnbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbnw(board, ('yellow', 'yellow', 'red', 'blue', 'green'), 1, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnbnw",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "blue",
                            "green",
                            "yellow",
                            "blue",
                            "green"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            5,
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'blue', 2, 5)\nput(board, 'nut', 'green', 3, 6)\nput(board, 'bridge-v', 'yellow', 2, 6)\nput(board, 'nut', 'blue', 2, 6)\nput(board, 'washer', 'green', 2, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'blue', 2, 5)",
                                    "put(board, 'nut', 'green', 3, 6)",
                                    "put(board, 'bridge-v', 'yellow', 2, 6)",
                                    "put(board, 'nut', 'blue', 2, 6)",
                                    "put(board, 'washer', 'green', 2, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbnw(board, ('blue', 'green', 'yellow', 'blue', 'green'), 2, 5)",
                                "function": "def bnbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbnw(board, ('blue', 'green', 'yellow', 'blue', 'green'), 2, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 3rd row, 6th column. place a green nut in the 4th row, 7th column. place a yellow bridge vertically in the 3rd row, 7th column. place a blue nut in the 3rd row, 7th column. place a green washer in the 3rd row, 7th column. This is bnbnw.",
                                        "<Editor>": {
                                            "total_code": "def bnbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbnw(board, ('blue', 'green', 'yellow', 'blue', 'green'), 2, 5)",
                                            "function": "def bnbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbnw(board, ('blue', 'green', 'yellow', 'blue', 'green'), 2, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'green', 2, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bnbns": [
                    {
                        "combo_name": "bnbns",
                        "shapes": [
                            "bridge-v",
                            "nut",
                            "bridge-h",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "red",
                            "yellow",
                            "green",
                            "red"
                        ],
                        "x": [
                            2,
                            2,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            6,
                            7,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            "vertical",
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'red', 2, 6)\nput(board, 'nut', 'red', 2, 7)\nput(board, 'bridge-h', 'yellow', 2, 6)\nput(board, 'nut', 'green', 2, 6)\nput(board, 'screw', 'red', 2, 6)",
                                "output": [
                                    "put(board, 'bridge-v', 'red', 2, 6)",
                                    "put(board, 'nut', 'red', 2, 7)",
                                    "put(board, 'bridge-h', 'yellow', 2, 6)",
                                    "put(board, 'nut', 'green', 2, 6)",
                                    "put(board, 'screw', 'red', 2, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbns(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbns(board, ('red', 'red', 'yellow', 'green', 'red'), 2, 6)",
                                "function": "def bnbns(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbns(board, ('red', 'red', 'yellow', 'green', 'red'), 2, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 3rd row, 7th column. place a red nut in the 3rd row, 8th column. place a yellow bridge horizontally in the 3rd row, 7th column. place a green nut in the 3rd row, 7th column. place a red screw in the 3rd row, 7th column. This is bnbns.",
                                        "<Editor>": {
                                            "total_code": "def bnbns(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbns(board, ('red', 'red', 'yellow', 'green', 'red'), 2, 6)",
                                            "function": "def bnbns(board, colors, x, y):\n    shapes = ['bridge-v', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbns(board, ('red', 'red', 'yellow', 'green', 'red'), 2, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 3rd row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'red', 2, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'red', 2, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bnbns",
                        "shapes": [
                            "bridge-h",
                            "nut",
                            "bridge-v",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "green",
                            "yellow",
                            "red",
                            "green"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'red', 1, 5)\nput(board, 'nut', 'green', 2, 5)\nput(board, 'bridge-v', 'yellow', 1, 5)\nput(board, 'nut', 'red', 1, 5)\nput(board, 'screw', 'green', 1, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'red', 1, 5)",
                                    "put(board, 'nut', 'green', 2, 5)",
                                    "put(board, 'bridge-v', 'yellow', 1, 5)",
                                    "put(board, 'nut', 'red', 1, 5)",
                                    "put(board, 'screw', 'green', 1, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bnbns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbns(board, ('red', 'green', 'yellow', 'red', 'green'), 1, 5)",
                                "function": "def bnbns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bnbns(board, ('red', 'green', 'yellow', 'red', 'green'), 1, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 2nd row, 6th column. place a green nut in the 3rd row, 6th column. place a yellow bridge vertically in the 2nd row, 6th column. place a red nut in the 2nd row, 6th column. place a green screw in the 2nd row, 6th column. This is bnbns.",
                                        "<Editor>": {
                                            "total_code": "def bnbns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbnbns(board, ('red', 'green', 'yellow', 'red', 'green'), 1, 5)",
                                            "function": "def bnbns(board, colors, x, y):\n    shapes = ['bridge-h', 'nut', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bnbns(board, ('red', 'green', 'yellow', 'red', 'green'), 1, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'green', 1, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bbbwn": [
                    {
                        "combo_name": "bbbwn",
                        "shapes": [
                            "bridge-h",
                            "bridge-v",
                            "bridge-v",
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "red",
                            "red",
                            "blue",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            5,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            "vertical",
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'red', 0, 5)\nput(board, 'bridge-v', 'red', 1, 5)\nput(board, 'bridge-v', 'blue', 0, 5)\nput(board, 'washer', 'yellow', 0, 5)\nput(board, 'nut', 'blue', 0, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'red', 0, 5)",
                                    "put(board, 'bridge-v', 'red', 1, 5)",
                                    "put(board, 'bridge-v', 'blue', 0, 5)",
                                    "put(board, 'washer', 'yellow', 0, 5)",
                                    "put(board, 'nut', 'blue', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbwn(board, ('red', 'red', 'blue', 'yellow', 'blue'), 0, 5)",
                                "function": "def bbbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbwn(board, ('red', 'red', 'blue', 'yellow', 'blue'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 1st row, 6th column. place a red bridge vertically in the 2nd row, 6th column. place a blue bridge vertically in the 1st row, 6th column. place a yellow washer in the 1st row, 6th column. place a blue nut in the 1st row, 6th column. This is bbbwn.",
                                        "<Editor>": {
                                            "total_code": "def bbbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbwn(board, ('red', 'red', 'blue', 'yellow', 'blue'), 0, 5)",
                                            "function": "def bbbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbwn(board, ('red', 'red', 'blue', 'yellow', 'blue'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bbbwn",
                        "shapes": [
                            "bridge-h",
                            "bridge-v",
                            "bridge-v",
                            "washer",
                            "nut"
                        ],
                        "colors": [
                            "blue",
                            "red",
                            "yellow",
                            "blue",
                            "green"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            "vertical",
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'blue', 0, 4)\nput(board, 'bridge-v', 'red', 1, 5)\nput(board, 'bridge-v', 'yellow', 0, 5)\nput(board, 'washer', 'blue', 0, 5)\nput(board, 'nut', 'green', 0, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'blue', 0, 4)",
                                    "put(board, 'bridge-v', 'red', 1, 5)",
                                    "put(board, 'bridge-v', 'yellow', 0, 5)",
                                    "put(board, 'washer', 'blue', 0, 5)",
                                    "put(board, 'nut', 'green', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbwn(board, ('blue', 'red', 'yellow', 'blue', 'green'), 0, 4)",
                                "function": "def bbbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbwn(board, ('blue', 'red', 'yellow', 'blue', 'green'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 1st row, 5th column. place a red bridge vertically in the 2nd row, 6th column. place a yellow bridge vertically in the 1st row, 6th column. place a blue washer in the 1st row, 6th column. place a green nut in the 1st row, 6th column. This is bbbwn.",
                                        "<Editor>": {
                                            "total_code": "def bbbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbwn(board, ('blue', 'red', 'yellow', 'blue', 'green'), 0, 4)",
                                            "function": "def bbbwn(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'nut']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbwn(board, ('blue', 'red', 'yellow', 'blue', 'green'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 0, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bbbws": [
                    {
                        "combo_name": "bbbws",
                        "shapes": [
                            "bridge-h",
                            "bridge-v",
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "yellow",
                            "red",
                            "blue",
                            "green"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            "vertical",
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'blue', 3, 4)\nput(board, 'bridge-v', 'yellow', 4, 5)\nput(board, 'bridge-v', 'red', 3, 5)\nput(board, 'washer', 'blue', 3, 5)\nput(board, 'screw', 'green', 3, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'blue', 3, 4)",
                                    "put(board, 'bridge-v', 'yellow', 4, 5)",
                                    "put(board, 'bridge-v', 'red', 3, 5)",
                                    "put(board, 'washer', 'blue', 3, 5)",
                                    "put(board, 'screw', 'green', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbws(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbws(board, ('blue', 'yellow', 'red', 'blue', 'green'), 3, 4)",
                                "function": "def bbbws(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbws(board, ('blue', 'yellow', 'red', 'blue', 'green'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 4th row, 5th column. place a yellow bridge vertically in the 5th row, 6th column. place a red bridge vertically in the 4th row, 6th column. place a blue washer in the 4th row, 6th column. place a green screw in the 4th row, 6th column. This is bbbws.",
                                        "<Editor>": {
                                            "total_code": "def bbbws(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbws(board, ('blue', 'yellow', 'red', 'blue', 'green'), 3, 4)",
                                            "function": "def bbbws(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbws(board, ('blue', 'yellow', 'red', 'blue', 'green'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 5th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 4, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'green', 3, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bbbws",
                        "shapes": [
                            "bridge-h",
                            "bridge-h",
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "red",
                            "green",
                            "red"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            "horizontal",
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 2, 4)\nput(board, 'bridge-h', 'green', 3, 5)\nput(board, 'bridge-v', 'red', 2, 5)\nput(board, 'washer', 'green', 2, 5)\nput(board, 'screw', 'red', 2, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 2, 4)",
                                    "put(board, 'bridge-h', 'green', 3, 5)",
                                    "put(board, 'bridge-v', 'red', 2, 5)",
                                    "put(board, 'washer', 'green', 2, 5)",
                                    "put(board, 'screw', 'red', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbws(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbws(board, ('green', 'green', 'red', 'green', 'red'), 2, 4)",
                                "function": "def bbbws(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbws(board, ('green', 'green', 'red', 'green', 'red'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 5th column. place a green bridge horizontally in the 4th row, 6th column. place a red bridge vertically in the 3rd row, 6th column. place a green washer in the 3rd row, 6th column. place a red screw in the 3rd row, 6th column. This is bbbws.",
                                        "<Editor>": {
                                            "total_code": "def bbbws(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbws(board, ('green', 'green', 'red', 'green', 'red'), 2, 4)",
                                            "function": "def bbbws(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbws(board, ('green', 'green', 'red', 'green', 'red'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'red', 2, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bbbnw": [
                    {
                        "combo_name": "bbbnw",
                        "shapes": [
                            "bridge-h",
                            "bridge-v",
                            "bridge-v",
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "green",
                            "red",
                            "yellow",
                            "red",
                            "yellow"
                        ],
                        "x": [
                            2,
                            3,
                            2,
                            2,
                            2
                        ],
                        "y": [
                            4,
                            5,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            "horizontal",
                            "vertical",
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'green', 2, 4)\nput(board, 'bridge-v', 'red', 3, 5)\nput(board, 'bridge-v', 'yellow', 2, 5)\nput(board, 'nut', 'red', 2, 5)\nput(board, 'washer', 'yellow', 2, 5)",
                                "output": [
                                    "put(board, 'bridge-h', 'green', 2, 4)",
                                    "put(board, 'bridge-v', 'red', 3, 5)",
                                    "put(board, 'bridge-v', 'yellow', 2, 5)",
                                    "put(board, 'nut', 'red', 2, 5)",
                                    "put(board, 'washer', 'yellow', 2, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbnw(board, ('green', 'red', 'yellow', 'red', 'yellow'), 2, 4)",
                                "function": "def bbbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbnw(board, ('green', 'red', 'yellow', 'red', 'yellow'), 2, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 5th column. place a red bridge vertically in the 4th row, 6th column. place a yellow bridge vertically in the 3rd row, 6th column. place a red nut in the 3rd row, 6th column. place a yellow washer in the 3rd row, 6th column. This is bbbnw.",
                                        "<Editor>": {
                                            "total_code": "def bbbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbnw(board, ('green', 'red', 'yellow', 'red', 'yellow'), 2, 4)",
                                            "function": "def bbbnw(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbnw(board, ('green', 'red', 'yellow', 'red', 'yellow'), 2, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 3rd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 2, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'red', 2, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 3rd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 2, 5)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bbbnw",
                        "shapes": [
                            "bridge-v",
                            "bridge-h",
                            "bridge-h",
                            "nut",
                            "washer"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "green",
                            "red",
                            "green"
                        ],
                        "x": [
                            1,
                            1,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            "vertical",
                            "horizontal",
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-v', 'yellow', 1, 4)\nput(board, 'bridge-h', 'yellow', 1, 5)\nput(board, 'bridge-h', 'green', 1, 4)\nput(board, 'nut', 'red', 1, 4)\nput(board, 'washer', 'green', 1, 4)",
                                "output": [
                                    "put(board, 'bridge-v', 'yellow', 1, 4)",
                                    "put(board, 'bridge-h', 'yellow', 1, 5)",
                                    "put(board, 'bridge-h', 'green', 1, 4)",
                                    "put(board, 'nut', 'red', 1, 4)",
                                    "put(board, 'washer', 'green', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbnw(board, ('yellow', 'yellow', 'green', 'red', 'green'), 1, 4)",
                                "function": "def bbbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbnw(board, ('yellow', 'yellow', 'green', 'red', 'green'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 5th column. place a yellow bridge horizontally in the 2nd row, 6th column. place a green bridge horizontally in the 2nd row, 5th column. place a red nut in the 2nd row, 5th column. place a green washer in the 2nd row, 5th column. This is bbbnw.",
                                        "<Editor>": {
                                            "total_code": "def bbbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbnw(board, ('yellow', 'yellow', 'green', 'red', 'green'), 1, 4)",
                                            "function": "def bbbnw(board, colors, x, y):\n    shapes = ['bridge-v', 'bridge-h', 'bridge-h', 'nut', 'washer']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbnw(board, ('yellow', 'yellow', 'green', 'red', 'green'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'red', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "bbbns": [
                    {
                        "combo_name": "bbbns",
                        "shapes": [
                            "bridge-h",
                            "bridge-v",
                            "bridge-v",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "yellow",
                            "green",
                            "yellow",
                            "blue"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            "vertical",
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'red', 1, 6)\nput(board, 'bridge-v', 'yellow', 2, 6)\nput(board, 'bridge-v', 'green', 1, 6)\nput(board, 'nut', 'yellow', 1, 6)\nput(board, 'screw', 'blue', 1, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'red', 1, 6)",
                                    "put(board, 'bridge-v', 'yellow', 2, 6)",
                                    "put(board, 'bridge-v', 'green', 1, 6)",
                                    "put(board, 'nut', 'yellow', 1, 6)",
                                    "put(board, 'screw', 'blue', 1, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbns(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbns(board, ('red', 'yellow', 'green', 'yellow', 'blue'), 1, 6)",
                                "function": "def bbbns(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbns(board, ('red', 'yellow', 'green', 'yellow', 'blue'), 1, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 2nd row, 7th column. place a yellow bridge vertically in the 3rd row, 7th column. place a green bridge vertically in the 2nd row, 7th column. place a yellow nut in the 2nd row, 7th column. place a blue screw in the 2nd row, 7th column. This is bbbns.",
                                        "<Editor>": {
                                            "total_code": "def bbbns(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbns(board, ('red', 'yellow', 'green', 'yellow', 'blue'), 1, 6)",
                                            "function": "def bbbns(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-v', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbns(board, ('red', 'yellow', 'green', 'yellow', 'blue'), 1, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge vertically in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'yellow', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 1, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "bbbns",
                        "shapes": [
                            "bridge-h",
                            "bridge-h",
                            "bridge-v",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "blue",
                            "green",
                            "red",
                            "green"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            5,
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            "horizontal",
                            "horizontal",
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'bridge-h', 'red', 3, 5)\nput(board, 'bridge-h', 'blue', 4, 6)\nput(board, 'bridge-v', 'green', 3, 6)\nput(board, 'nut', 'red', 3, 6)\nput(board, 'screw', 'green', 3, 6)",
                                "output": [
                                    "put(board, 'bridge-h', 'red', 3, 5)",
                                    "put(board, 'bridge-h', 'blue', 4, 6)",
                                    "put(board, 'bridge-v', 'green', 3, 6)",
                                    "put(board, 'nut', 'red', 3, 6)",
                                    "put(board, 'screw', 'green', 3, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def bbbns(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbns(board, ('red', 'blue', 'green', 'red', 'green'), 3, 5)",
                                "function": "def bbbns(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "bbbns(board, ('red', 'blue', 'green', 'red', 'green'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed1_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed1.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 6th column. place a blue bridge horizontally in the 5th row, 7th column. place a green bridge vertically in the 4th row, 7th column. place a red nut in the 4th row, 7th column. place a green screw in the 4th row, 7th column. This is bbbns.",
                                        "<Editor>": {
                                            "total_code": "def bbbns(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nbbbns(board, ('red', 'blue', 'green', 'red', 'green'), 3, 5)",
                                            "function": "def bbbns(board, colors, x, y):\n    shapes = ['bridge-h', 'bridge-h', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 1, 1, 1, 1]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "bbbns(board, ('red', 'blue', 'green', 'red', 'green'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 5th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 4, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge vertically in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'red', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'green', 3, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wwbns": [
                    {
                        "combo_name": "wwbns",
                        "shapes": [
                            "washer",
                            "washer",
                            "bridge-v",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "yellow",
                            "blue",
                            "red",
                            "blue"
                        ],
                        "x": [
                            3,
                            4,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            7,
                            7,
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'green', 3, 7)\nput(board, 'washer', 'yellow', 4, 7)\nput(board, 'bridge-v', 'blue', 3, 7)\nput(board, 'nut', 'red', 3, 7)\nput(board, 'screw', 'blue', 3, 7)",
                                "output": [
                                    "put(board, 'washer', 'green', 3, 7)",
                                    "put(board, 'washer', 'yellow', 4, 7)",
                                    "put(board, 'bridge-v', 'blue', 3, 7)",
                                    "put(board, 'nut', 'red', 3, 7)",
                                    "put(board, 'screw', 'blue', 3, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wwbns(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbns(board, ('green', 'yellow', 'blue', 'red', 'blue'), 3, 7)",
                                "function": "def wwbns(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wwbns(board, ('green', 'yellow', 'blue', 'red', 'blue'), 3, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 8th column. place a yellow washer in the 5th row, 8th column. place a blue bridge vertically in the 4th row, 8th column. place a red nut in the 4th row, 8th column. place a blue screw in the 4th row, 8th column. This is wwbns.",
                                        "<Editor>": {
                                            "total_code": "def wwbns(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbns(board, ('green', 'yellow', 'blue', 'red', 'blue'), 3, 7)",
                                            "function": "def wwbns(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wwbns(board, ('green', 'yellow', 'blue', 'red', 'blue'), 3, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green washer in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'green', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 5th row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 4, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'red', 3, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue screw in the 4th row, 8th column",
                                        "<Editor>": "put(board, 'screw', 'blue', 3, 7)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wwbns",
                        "shapes": [
                            "washer",
                            "washer",
                            "bridge-h",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "blue",
                            "red",
                            "green",
                            "red"
                        ],
                        "x": [
                            1,
                            1,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'blue', 1, 4)\nput(board, 'washer', 'blue', 1, 5)\nput(board, 'bridge-h', 'red', 1, 4)\nput(board, 'nut', 'green', 1, 4)\nput(board, 'screw', 'red', 1, 4)",
                                "output": [
                                    "put(board, 'washer', 'blue', 1, 4)",
                                    "put(board, 'washer', 'blue', 1, 5)",
                                    "put(board, 'bridge-h', 'red', 1, 4)",
                                    "put(board, 'nut', 'green', 1, 4)",
                                    "put(board, 'screw', 'red', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wwbns(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbns(board, ('blue', 'blue', 'red', 'green', 'red'), 1, 4)",
                                "function": "def wwbns(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wwbns(board, ('blue', 'blue', 'red', 'green', 'red'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 2nd row, 5th column. place a blue washer in the 2nd row, 6th column. place a red bridge horizontally in the 2nd row, 5th column. place a green nut in the 2nd row, 5th column. place a red screw in the 2nd row, 5th column. This is wwbns.",
                                        "<Editor>": {
                                            "total_code": "def wwbns(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwwbns(board, ('blue', 'blue', 'red', 'green', 'red'), 1, 4)",
                                            "function": "def wwbns(board, colors, x, y):\n    shapes = ['washer', 'washer', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wwbns(board, ('blue', 'blue', 'red', 'green', 'red'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'red', 1, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wnbns": [
                    {
                        "combo_name": "wnbns",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-h",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "red",
                            "red",
                            "yellow",
                            "blue",
                            "yellow"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'red', 3, 4)\nput(board, 'nut', 'red', 3, 5)\nput(board, 'bridge-h', 'yellow', 3, 4)\nput(board, 'nut', 'blue', 3, 4)\nput(board, 'screw', 'yellow', 3, 4)",
                                "output": [
                                    "put(board, 'washer', 'red', 3, 4)",
                                    "put(board, 'nut', 'red', 3, 5)",
                                    "put(board, 'bridge-h', 'yellow', 3, 4)",
                                    "put(board, 'nut', 'blue', 3, 4)",
                                    "put(board, 'screw', 'yellow', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnbns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbns(board, ('red', 'red', 'yellow', 'blue', 'yellow'), 3, 4)",
                                "function": "def wnbns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnbns(board, ('red', 'red', 'yellow', 'blue', 'yellow'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 5th column. place a red nut in the 4th row, 6th column. place a yellow bridge horizontally in the 4th row, 5th column. place a blue nut in the 4th row, 5th column. place a yellow screw in the 4th row, 5th column. This is wnbns.",
                                        "<Editor>": {
                                            "total_code": "def wnbns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbns(board, ('red', 'red', 'yellow', 'blue', 'yellow'), 3, 4)",
                                            "function": "def wnbns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnbns(board, ('red', 'red', 'yellow', 'blue', 'yellow'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'red', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red nut in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'red', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 3, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wnbns",
                        "shapes": [
                            "washer",
                            "nut",
                            "bridge-h",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "green",
                            "blue",
                            "yellow",
                            "red"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            6,
                            7,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 0, 6)\nput(board, 'nut', 'green', 0, 7)\nput(board, 'bridge-h', 'blue', 0, 6)\nput(board, 'nut', 'yellow', 0, 6)\nput(board, 'screw', 'red', 0, 6)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 0, 6)",
                                    "put(board, 'nut', 'green', 0, 7)",
                                    "put(board, 'bridge-h', 'blue', 0, 6)",
                                    "put(board, 'nut', 'yellow', 0, 6)",
                                    "put(board, 'screw', 'red', 0, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wnbns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbns(board, ('yellow', 'green', 'blue', 'yellow', 'red'), 0, 6)",
                                "function": "def wnbns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wnbns(board, ('yellow', 'green', 'blue', 'yellow', 'red'), 0, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 7th column. place a green nut in the 1st row, 8th column. place a blue bridge horizontally in the 1st row, 7th column. place a yellow nut in the 1st row, 7th column. place a red screw in the 1st row, 7th column. This is wnbns.",
                                        "<Editor>": {
                                            "total_code": "def wnbns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwnbns(board, ('yellow', 'green', 'blue', 'yellow', 'red'), 0, 6)",
                                            "function": "def wnbns(board, colors, x, y):\n    shapes = ['washer', 'nut', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wnbns(board, ('yellow', 'green', 'blue', 'yellow', 'red'), 0, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'green', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow nut in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'yellow', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'red', 0, 6)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "wbbns": [
                    {
                        "combo_name": "wbbns",
                        "shapes": [
                            "washer",
                            "bridge-v",
                            "bridge-h",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "red",
                            "green",
                            "blue",
                            "yellow"
                        ],
                        "x": [
                            1,
                            1,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            "vertical",
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 1, 4)\nput(board, 'bridge-v', 'red', 1, 5)\nput(board, 'bridge-h', 'green', 1, 4)\nput(board, 'nut', 'blue', 1, 4)\nput(board, 'screw', 'yellow', 1, 4)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 1, 4)",
                                    "put(board, 'bridge-v', 'red', 1, 5)",
                                    "put(board, 'bridge-h', 'green', 1, 4)",
                                    "put(board, 'nut', 'blue', 1, 4)",
                                    "put(board, 'screw', 'yellow', 1, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbbns(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbns(board, ('yellow', 'red', 'green', 'blue', 'yellow'), 1, 4)",
                                "function": "def wbbns(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbbns(board, ('yellow', 'red', 'green', 'blue', 'yellow'), 1, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 2nd row, 5th column. place a red bridge vertically in the 2nd row, 6th column. place a green bridge horizontally in the 2nd row, 5th column. place a blue nut in the 2nd row, 5th column. place a yellow screw in the 2nd row, 5th column. This is wbbns.",
                                        "<Editor>": {
                                            "total_code": "def wbbns(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbns(board, ('yellow', 'red', 'green', 'blue', 'yellow'), 1, 4)",
                                            "function": "def wbbns(board, colors, x, y):\n    shapes = ['washer', 'bridge-v', 'bridge-h', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbbns(board, ('yellow', 'red', 'green', 'blue', 'yellow'), 1, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 6th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'green', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow screw in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'yellow', 1, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "wbbns",
                        "shapes": [
                            "washer",
                            "bridge-h",
                            "bridge-v",
                            "nut",
                            "screw"
                        ],
                        "colors": [
                            "yellow",
                            "yellow",
                            "red",
                            "blue",
                            "green"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            4,
                            4,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'washer', 'yellow', 0, 4)\nput(board, 'bridge-h', 'yellow', 1, 4)\nput(board, 'bridge-v', 'red', 0, 4)\nput(board, 'nut', 'blue', 0, 4)\nput(board, 'screw', 'green', 0, 4)",
                                "output": [
                                    "put(board, 'washer', 'yellow', 0, 4)",
                                    "put(board, 'bridge-h', 'yellow', 1, 4)",
                                    "put(board, 'bridge-v', 'red', 0, 4)",
                                    "put(board, 'nut', 'blue', 0, 4)",
                                    "put(board, 'screw', 'green', 0, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def wbbns(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbns(board, ('yellow', 'yellow', 'red', 'blue', 'green'), 0, 4)",
                                "function": "def wbbns(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "wbbns(board, ('yellow', 'yellow', 'red', 'blue', 'green'), 0, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 5th column. place a yellow bridge horizontally in the 2nd row, 5th column. place a red bridge vertically in the 1st row, 5th column. place a blue nut in the 1st row, 5th column. place a green screw in the 1st row, 5th column. This is wbbns.",
                                        "<Editor>": {
                                            "total_code": "def wbbns(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nwbbns(board, ('yellow', 'yellow', 'red', 'blue', 'green'), 0, 4)",
                                            "function": "def wbbns(board, colors, x, y):\n    shapes = ['washer', 'bridge-h', 'bridge-v', 'nut', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "wbbns(board, ('yellow', 'yellow', 'red', 'blue', 'green'), 0, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 2nd row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 1, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 1st row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'green', 0, 4)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nwbws": [
                    {
                        "combo_name": "nwbws",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-h",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "red",
                            "blue",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            4,
                            5,
                            4,
                            4,
                            4
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'green', 3, 4)\nput(board, 'washer', 'red', 3, 5)\nput(board, 'bridge-h', 'blue', 3, 4)\nput(board, 'washer', 'yellow', 3, 4)\nput(board, 'screw', 'green', 3, 4)",
                                "output": [
                                    "put(board, 'nut', 'green', 3, 4)",
                                    "put(board, 'washer', 'red', 3, 5)",
                                    "put(board, 'bridge-h', 'blue', 3, 4)",
                                    "put(board, 'washer', 'yellow', 3, 4)",
                                    "put(board, 'screw', 'green', 3, 4)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwbws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbws(board, ('green', 'red', 'blue', 'yellow', 'green'), 3, 4)",
                                "function": "def nwbws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwbws(board, ('green', 'red', 'blue', 'yellow', 'green'), 3, 4)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 5th column. place a red washer in the 4th row, 6th column. place a blue bridge horizontally in the 4th row, 5th column. place a yellow washer in the 4th row, 5th column. place a green screw in the 4th row, 5th column. This is nwbws.",
                                        "<Editor>": {
                                            "total_code": "def nwbws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbws(board, ('green', 'red', 'blue', 'yellow', 'green'), 3, 4)",
                                            "function": "def nwbws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwbws(board, ('green', 'red', 'blue', 'yellow', 'green'), 3, 4)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'nut', 'green', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a red washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'red', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 3, 4)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 4th row, 5th column",
                                        "<Editor>": "put(board, 'screw', 'green', 3, 4)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nwbws",
                        "shapes": [
                            "nut",
                            "washer",
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "blue",
                            "yellow",
                            "green"
                        ],
                        "x": [
                            0,
                            1,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            7,
                            7,
                            7,
                            7,
                            7
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'green', 0, 7)\nput(board, 'washer', 'green', 1, 7)\nput(board, 'bridge-v', 'blue', 0, 7)\nput(board, 'washer', 'yellow', 0, 7)\nput(board, 'screw', 'green', 0, 7)",
                                "output": [
                                    "put(board, 'nut', 'green', 0, 7)",
                                    "put(board, 'washer', 'green', 1, 7)",
                                    "put(board, 'bridge-v', 'blue', 0, 7)",
                                    "put(board, 'washer', 'yellow', 0, 7)",
                                    "put(board, 'screw', 'green', 0, 7)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nwbws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbws(board, ('green', 'green', 'blue', 'yellow', 'green'), 0, 7)",
                                "function": "def nwbws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nwbws(board, ('green', 'green', 'blue', 'yellow', 'green'), 0, 7)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 1st row, 8th column. place a green washer in the 2nd row, 8th column. place a blue bridge vertically in the 1st row, 8th column. place a yellow washer in the 1st row, 8th column. place a green screw in the 1st row, 8th column. This is nwbws.",
                                        "<Editor>": {
                                            "total_code": "def nwbws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnwbws(board, ('green', 'green', 'blue', 'yellow', 'green'), 0, 7)",
                                            "function": "def nwbws(board, colors, x, y):\n    shapes = ['nut', 'washer', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nwbws(board, ('green', 'green', 'blue', 'yellow', 'green'), 0, 7)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'nut', 'green', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 2nd row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'green', 1, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge vertically in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'bridge-v', 'blue', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 0, 7)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 1st row, 8th column",
                                        "<Editor>": "put(board, 'screw', 'green', 0, 7)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nnbws": [
                    {
                        "combo_name": "nnbws",
                        "shapes": [
                            "nut",
                            "nut",
                            "bridge-v",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "red",
                            "blue",
                            "green"
                        ],
                        "x": [
                            1,
                            2,
                            1,
                            1,
                            1
                        ],
                        "y": [
                            6,
                            6,
                            6,
                            6,
                            6
                        ],
                        "orientations": [
                            null,
                            null,
                            "vertical",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 3,
                        "min_cols": 2,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'green', 1, 6)\nput(board, 'nut', 'green', 2, 6)\nput(board, 'bridge-v', 'red', 1, 6)\nput(board, 'washer', 'blue', 1, 6)\nput(board, 'screw', 'green', 1, 6)",
                                "output": [
                                    "put(board, 'nut', 'green', 1, 6)",
                                    "put(board, 'nut', 'green', 2, 6)",
                                    "put(board, 'bridge-v', 'red', 1, 6)",
                                    "put(board, 'washer', 'blue', 1, 6)",
                                    "put(board, 'screw', 'green', 1, 6)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nnbws(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbws(board, ('green', 'green', 'red', 'blue', 'green'), 1, 6)",
                                "function": "def nnbws(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nnbws(board, ('green', 'green', 'red', 'blue', 'green'), 1, 6)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed3_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed3.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 2nd row, 7th column. place a green nut in the 3rd row, 7th column. place a red bridge vertically in the 2nd row, 7th column. place a blue washer in the 2nd row, 7th column. place a green screw in the 2nd row, 7th column. This is nnbws.",
                                        "<Editor>": {
                                            "total_code": "def nnbws(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbws(board, ('green', 'green', 'red', 'blue', 'green'), 1, 6)",
                                            "function": "def nnbws(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-v', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 1, 0, 0, 0], [0, 0, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nnbws(board, ('green', 'green', 'red', 'blue', 'green'), 1, 6)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'green', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 3rd row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'green', 2, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge vertically in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'bridge-v', 'red', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a blue washer in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'washer', 'blue', 1, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a green screw in the 2nd row, 7th column",
                                        "<Editor>": "put(board, 'screw', 'green', 1, 6)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "combo_name": "nnbws",
                        "shapes": [
                            "nut",
                            "nut",
                            "bridge-h",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "green",
                            "green",
                            "red",
                            "yellow",
                            "red"
                        ],
                        "x": [
                            3,
                            3,
                            3,
                            3,
                            3
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            null,
                            null,
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'green', 3, 5)\nput(board, 'nut', 'green', 3, 6)\nput(board, 'bridge-h', 'red', 3, 5)\nput(board, 'washer', 'yellow', 3, 5)\nput(board, 'screw', 'red', 3, 5)",
                                "output": [
                                    "put(board, 'nut', 'green', 3, 5)",
                                    "put(board, 'nut', 'green', 3, 6)",
                                    "put(board, 'bridge-h', 'red', 3, 5)",
                                    "put(board, 'washer', 'yellow', 3, 5)",
                                    "put(board, 'screw', 'red', 3, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nnbws(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbws(board, ('green', 'green', 'red', 'yellow', 'red'), 3, 5)",
                                "function": "def nnbws(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nnbws(board, ('green', 'green', 'red', 'yellow', 'red'), 3, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 6th column. place a green nut in the 4th row, 7th column. place a red bridge horizontally in the 4th row, 6th column. place a yellow washer in the 4th row, 6th column. place a red screw in the 4th row, 6th column. This is nnbws.",
                                        "<Editor>": {
                                            "total_code": "def nnbws(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnnbws(board, ('green', 'green', 'red', 'yellow', 'red'), 3, 5)",
                                            "function": "def nnbws(board, colors, x, y):\n    shapes = ['nut', 'nut', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nnbws(board, ('green', 'green', 'red', 'yellow', 'red'), 3, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'green', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green nut in the 4th row, 7th column",
                                        "<Editor>": "put(board, 'nut', 'green', 3, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a red bridge horizontally in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'red', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow washer in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'yellow', 3, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 4th row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'red', 3, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "nbbws": [
                    {
                        "combo_name": "nbbws",
                        "shapes": [
                            "nut",
                            "bridge-h",
                            "bridge-h",
                            "washer",
                            "screw"
                        ],
                        "colors": [
                            "blue",
                            "blue",
                            "yellow",
                            "green",
                            "red"
                        ],
                        "x": [
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        "y": [
                            5,
                            6,
                            5,
                            5,
                            5
                        ],
                        "orientations": [
                            null,
                            "horizontal",
                            "horizontal",
                            null,
                            null
                        ],
                        "rows": 8,
                        "cols": 8,
                        "min_rows": 2,
                        "min_cols": 3,
                        "code": {
                            "multi_turn": {
                                "total_code": "board = init_board(8, 8)\nput(board, 'nut', 'blue', 0, 5)\nput(board, 'bridge-h', 'blue', 0, 6)\nput(board, 'bridge-h', 'yellow', 0, 5)\nput(board, 'washer', 'green', 0, 5)\nput(board, 'screw', 'red', 0, 5)",
                                "output": [
                                    "put(board, 'nut', 'blue', 0, 5)",
                                    "put(board, 'bridge-h', 'blue', 0, 6)",
                                    "put(board, 'bridge-h', 'yellow', 0, 5)",
                                    "put(board, 'washer', 'green', 0, 5)",
                                    "put(board, 'screw', 'red', 0, 5)"
                                ],
                                "error": null
                            },
                            "single_turn": {
                                "total_code": "def nbbws(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbws(board, ('blue', 'blue', 'yellow', 'green', 'red'), 0, 5)",
                                "function": "def nbbws(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                "usage": "nbbws(board, ('blue', 'blue', 'yellow', 'green', 'red'), 0, 5)",
                                "error": null
                            }
                        },
                        "quadrant": "tr",
                        "seed_template": {
                            "multi_turn": "templates/code/simple/fiveshapes_seed2_multi.j2",
                            "single_turn": "templates/code/simple/fiveshapes_seed2.j2"
                        },
                        "dialogues": {
                            "single_turn": {
                                "template": "templates/instructions/simple/singleturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 6th column. place a blue bridge horizontally in the 1st row, 7th column. place a yellow bridge horizontally in the 1st row, 6th column. place a green washer in the 1st row, 6th column. place a red screw in the 1st row, 6th column. This is nbbws.",
                                        "<Editor>": {
                                            "total_code": "def nbbws(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)\nboard = init_board(8, 8)\nnbbws(board, ('blue', 'blue', 'yellow', 'green', 'red'), 0, 5)",
                                            "function": "def nbbws(board, colors, x, y):\n    shapes = ['nut', 'bridge-h', 'bridge-h', 'washer', 'screw']\n    for shape, color, dx, dy in zip(shapes, colors, [0, 0, 0, 0, 0], [0, 1, 0, 0, 0]):\n            put(board, shape, color, x + dx, y + dy)",
                                            "usage": "nbbws(board, ('blue', 'blue', 'yellow', 'green', 'red'), 0, 5)",
                                            "error": null
                                        }
                                    }
                                ]
                            },
                            "multi_turn": {
                                "template": "templates/instructions/simple/multiturn.j2",
                                "instructions": [
                                    {
                                        "<Programmer>": "place a blue nut in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'nut', 'blue', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a blue bridge horizontally in the 1st row, 7th column",
                                        "<Editor>": "put(board, 'bridge-h', 'blue', 0, 6)"
                                    },
                                    {
                                        "<Programmer>": "place a yellow bridge horizontally in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'bridge-h', 'yellow', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a green washer in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'washer', 'green', 0, 5)"
                                    },
                                    {
                                        "<Programmer>": "place a red screw in the 1st row, 6th column",
                                        "<Editor>": "put(board, 'screw', 'red', 0, 5)"
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        }
    }
}